; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	C:\Users\vitec\OneDrive\cpp\tetrGDIP\Win32Project3.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?hInst@@3PAUHINSTANCE__@@A			; hInst
PUBLIC	?szTitle@@3PA_WA				; szTitle
PUBLIC	?szWindowClass@@3PA_WA				; szWindowClass
PUBLIC	?window_class_name@@3PA_WA			; window_class_name
PUBLIC	?ak@@3HA					; ak
PUBLIC	?hhhwww@@3PAUHWND__@@A				; hhhwww
PUBLIC	?typ_gry@@3HA					; typ_gry
PUBLIC	?g_availableMonospaceFont@@3PA_WA		; g_availableMonospaceFont
PUBLIC	?g_currentFontIndex@@3HA			; g_currentFontIndex
PUBLIC	?g_fontScale@@3MA				; g_fontScale
PUBLIC	?ComboBoxDefault@@3P6GJPAUHWND__@@IIJ@ZA	; ComboBoxDefault
_BSS	SEGMENT
?hInst@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; hInst
?ak@@3HA DD	01H DUP (?)				; ak
?hhhwww@@3PAUHWND__@@A DD 01H DUP (?)			; hhhwww
?g_availableMonospaceFont@@3PA_WA DD 01H DUP (?)	; g_availableMonospaceFont
?g_currentFontIndex@@3HA DD 01H DUP (?)			; g_currentFontIndex
_GenericSansSerifFontFamily DD 01H DUP (?)
_GenericSerifFontFamily DD 01H DUP (?)
_GenericMonospaceFontFamily DD 01H DUP (?)
_GenericSansSerifFontFamilyBuffer DB 08H DUP (?)
_GenericSerifFontFamilyBuffer DB 08H DUP (?)
_GenericMonospaceFontFamilyBuffer DB 08H DUP (?)
?ComboBoxDefault@@3P6GJPAUHWND__@@IIJ@ZA DD 01H DUP (?)	; ComboBoxDefault
_GenericTypographicStringFormatBuffer DB 08H DUP (?)
_GenericDefaultStringFormatBuffer DB 08H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?szTitle@@3PA_WA DB 'T', 00H, 'E', 00H, 'T', 00H, 'R', 00H, 'I', 00H, 'S', 00H
	DB	00H, 00H					; szTitle
	ORG $+186
?szWindowClass@@3PA_WA DB 'p', 00H, 'o', 00H, 'i', 00H, 'u', 00H, 'y', 00H
	DB	't', 00H, 'r', 00H, 'e', 00H, 'w', 00H, 'q', 00H, 00H, 00H ; szWindowClass
	ORG $+178
?window_class_name@@3PA_WA DB 'H', 00H, 'O', 00H, 'L', 00H, 'O', 00H, 'V', 00H
	DB	'N', 00H, 'E', 00H, '_', 00H, 'V', 00H, 'I', 00H, 'K', 00H, 'N'
	DB	00H, 'O', 00H, 00H, 00H			; window_class_name
?typ_gry@@3HA DD 01H					; typ_gry
?g_fontScale@@3MA DD 03f800000r			; 1	; g_fontScale
_DATA	ENDS
CONST	SEGMENT
$SG77824 DB	'N', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'G', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 00H, 00H
$SG77856 DB	'A', 00H, 'd', 00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	'u', 00H, 'r', 00H, 'e', 00H, 00H, 00H
$SG77895 DB	'L', 00H, 'E', 00H, 'V', 00H, 'E', 00H, 'L', 00H, 00H, 00H
$SG77997 DB	'R', 00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, 00H, 00H
$SG78022 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG78066 DB	'P', 00H, 'A', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 00H, 00H
$SG78115 DB	'I', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '_', 00H
	DB	'%', 00H, '4', 00H, 'd', 00H, '_', 00H, '%', 00H, 'd', 00H, '.'
	DB	00H, 'j', 00H, 'p', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG78118 DB	'i', 00H, 'm', 00H, 'a', 00H, 'g', 00H, 'e', 00H, '/', 00H
	DB	'j', 00H, 'p', 00H, 'e', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG77194 DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 'o', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG77197 DB	'C', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 00H, 00H
$SG77210 DB	'%', 00H, '.', 00H, '2', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG77211 DB	'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG77215 DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 'o', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG77216 DB	'D', 00H, 'e', 00H, 'j', 00H, 'a', 00H, 'V', 00H, 'u', 00H
	DB	' ', 00H, 'S', 00H, 'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M'
	DB	00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77217 DB	'L', 00H, 'i', 00H, 'b', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'M', 00H, 'o'
	DB	00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77218 DB	'D', 00H, 'r', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	'S', 00H, 'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o'
	DB	00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77219 DB	'U', 00H, 'b', 00H, 'u', 00H, 'n', 00H, 't', 00H, 'u', 00H
	DB	' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77220 DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG77221 DB	'C', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 00H, 00H
$SG77222 DB	'F', 00H, 'i', 00H, 'r', 00H, 'a', 00H, ' ', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77223 DB	'I', 00H, 'B', 00H, 'M', 00H, ' ', 00H, 'P', 00H, 'l', 00H
	DB	'e', 00H, 'x', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o'
	DB	00H, 00H, 00H
$SG77224 DB	'J', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'r', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n'
	DB	00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77225 DB	'N', 00H, 'o', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'S', 00H
	DB	'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n'
	DB	00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77226 DB	'R', 00H, 'o', 00H, 'b', 00H, 'o', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77244 DB	'm', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 's', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'f', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG77250 DB	'%', 00H, '.', 00H, '2', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG77251 DB	'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG77255 DB	'C', 00H, 'o', 00H, 'n', 00H, 's', 00H, 'o', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG77256 DB	'D', 00H, 'e', 00H, 'j', 00H, 'a', 00H, 'V', 00H, 'u', 00H
	DB	' ', 00H, 'S', 00H, 'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M'
	DB	00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77257 DB	'L', 00H, 'i', 00H, 'b', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'M', 00H, 'o'
	DB	00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77258 DB	'D', 00H, 'r', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	'S', 00H, 'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o'
	DB	00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77259 DB	'U', 00H, 'b', 00H, 'u', 00H, 'n', 00H, 't', 00H, 'u', 00H
	DB	' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77260 DB	'S', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H
	DB	' ', 00H, 'C', 00H, 'o', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'P'
	DB	00H, 'r', 00H, 'o', 00H, 00H, 00H
$SG77261 DB	'C', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'i', 00H, 'e', 00H
	DB	'r', 00H, ' ', 00H, 'N', 00H, 'e', 00H, 'w', 00H, 00H, 00H
$SG77262 DB	'F', 00H, 'i', 00H, 'r', 00H, 'a', 00H, ' ', 00H, 'M', 00H
	DB	'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77263 DB	'I', 00H, 'B', 00H, 'M', 00H, ' ', 00H, 'P', 00H, 'l', 00H
	DB	'e', 00H, 'x', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o'
	DB	00H, 00H, 00H
$SG77264 DB	'J', 00H, 'e', 00H, 't', 00H, 'B', 00H, 'r', 00H, 'a', 00H
	DB	'i', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n'
	DB	00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77265 DB	'N', 00H, 'o', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'S', 00H
	DB	'a', 00H, 'n', 00H, 's', 00H, ' ', 00H, 'M', 00H, 'o', 00H, 'n'
	DB	00H, 'o', 00H, 00H, 00H
	ORG $+2
$SG77266 DB	'R', 00H, 'o', 00H, 'b', 00H, 'o', 00H, 't', 00H, 'o', 00H
	DB	' ', 00H, 'M', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 00H, 00H
$SG77270 DB	'm', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 's', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'f', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG77272 DB	'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG77287 DB	'%', 00H, '.', 00H, '2', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG77288 DB	'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG77299 DB	'm', 00H, 'o', 00H, 'n', 00H, 'o', 00H, 's', 00H, 'p', 00H
	DB	'a', 00H, 'c', 00H, 'e', 00H, '_', 00H, 'f', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H
	ORG $+2
$SG77300 DB	'%', 00H, '.', 00H, '2', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG77301 DB	'f', 00H, 'o', 00H, 'n', 00H, 't', 00H, '_', 00H, 's', 00H
	DB	'c', 00H, 'a', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG77362 DB	'/', 00H, 'a', 00H, 'a', 00H, 'p', 00H, 'c', 00H, 'h', 00H
	DB	'h', 00H, 00H, 00H
$SG77364 DB	'bin//setup.ini', 00H
	ORG $+1
$SG77365 DB	'setup.ini', 00H
	ORG $+2
$SG77380 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77381 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG77382 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77383 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG77420 DB	'bin//setup.ini', 00H
	ORG $+1
$SG77421 DB	'setup.ini', 00H
	ORG $+2
$SG77423 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG77424 DB	'0', 00H, 00H, 00H
$SG77425 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG77426 DB	'0', 00H, 00H, 00H
$SG77427 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG77429 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG77583 DB	'N', 00H, 'E', 00H, 'X', 00H, 'T', 00H, 00H, 00H
	ORG $+2
$SG77589 DB	'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77595 DB	's', 00H, 'p', 00H, 'e', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77602 DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77608 DB	'%', 00H, ' ', 00H, '8', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77614 DB	't', 00H, 'o', 00H, 't', 00H, 'a', 00H, 'l', 00H, 00H, 00H
$SG77621 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG77623 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG77624 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77625 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'n', 00H, 'o', 00H, 'r'
	DB	00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG77626 DB	'%', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77627 DB	'm', 00H, 'a', 00H, 'x', 00H, '_', 00H, 't', 00H, 'o', 00H
	DB	't', 00H, 'a', 00H, 'l', 00H, '_', 00H, 'a', 00H, 'd', 00H, 'v'
	DB	00H, 00H, 00H
$SG77628 DB	'%', 00H, ' ', 00H, '8', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG77634 DB	'm', 00H, 'a', 00H, 'x', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_wWinMain@16
PUBLIC	?swprintf@@YAHPA_WPB_WZZ			; swprintf
PUBLIC	??3GdiplusBase@Gdiplus@@SAXPAX@Z		; Gdiplus::GdiplusBase::operator delete
PUBLIC	??2GdiplusBase@Gdiplus@@SAPAXI@Z		; Gdiplus::GdiplusBase::operator new
PUBLIC	??0PointF@Gdiplus@@QAE@MM@Z			; Gdiplus::PointF::PointF
PUBLIC	??0RectF@Gdiplus@@QAE@MMMM@Z			; Gdiplus::RectF::RectF
PUBLIC	??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
PUBLIC	??0Color@Gdiplus@@QAE@EEEE@Z			; Gdiplus::Color::Color
PUBLIC	?GetValue@Color@Gdiplus@@QBEKXZ			; Gdiplus::Color::GetValue
PUBLIC	?MakeARGB@Color@Gdiplus@@SAKEEEE@Z		; Gdiplus::Color::MakeARGB
PUBLIC	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
PUBLIC	??1FontFamily@Gdiplus@@QAE@XZ			; Gdiplus::FontFamily::~FontFamily
PUBLIC	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
PUBLIC	??0Font@Gdiplus@@QAE@PBVFontFamily@1@MHW4Unit@1@@Z ; Gdiplus::Font::Font
PUBLIC	??1Font@Gdiplus@@QAE@XZ				; Gdiplus::Font::~Font
PUBLIC	?SetNativeFont@Font@Gdiplus@@IAEXPAVGpFont@2@@Z	; Gdiplus::Font::SetNativeFont
PUBLIC	??1Image@Gdiplus@@UAE@XZ			; Gdiplus::Image::~Image
PUBLIC	?Clone@Image@Gdiplus@@UAEPAV12@XZ		; Gdiplus::Image::Clone
PUBLIC	?Save@Image@Gdiplus@@QAE?AW4Status@2@PB_WPBU_GUID@@PBVEncoderParameters@2@@Z ; Gdiplus::Image::Save
PUBLIC	??0Image@Gdiplus@@IAE@XZ			; Gdiplus::Image::Image
PUBLIC	??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z ; Gdiplus::Image::Image
PUBLIC	?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z ; Gdiplus::Image::SetNativeImage
PUBLIC	?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus
PUBLIC	??_GImage@Gdiplus@@UAEPAXI@Z			; Gdiplus::Image::`scalar deleting destructor'
PUBLIC	??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z	; Gdiplus::Bitmap::Bitmap
PUBLIC	??1Bitmap@Gdiplus@@UAE@XZ			; Gdiplus::Bitmap::~Bitmap
PUBLIC	??_GBitmap@Gdiplus@@UAEPAXI@Z			; Gdiplus::Bitmap::`scalar deleting destructor'
PUBLIC	??0Matrix@Gdiplus@@QAE@XZ			; Gdiplus::Matrix::Matrix
PUBLIC	??1Matrix@Gdiplus@@QAE@XZ			; Gdiplus::Matrix::~Matrix
PUBLIC	?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ	; Gdiplus::Matrix::Reset
PUBLIC	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
PUBLIC	?SetNativeMatrix@Matrix@Gdiplus@@IAEXPAV12@@Z	; Gdiplus::Matrix::SetNativeMatrix
PUBLIC	?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Matrix::SetStatus
PUBLIC	??1Brush@Gdiplus@@UAE@XZ			; Gdiplus::Brush::~Brush
PUBLIC	?Clone@Brush@Gdiplus@@UBEPAV12@XZ		; Gdiplus::Brush::Clone
PUBLIC	??0Brush@Gdiplus@@IAE@XZ			; Gdiplus::Brush::Brush
PUBLIC	??0Brush@Gdiplus@@IAE@PAVGpBrush@1@W4Status@1@@Z ; Gdiplus::Brush::Brush
PUBLIC	?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z ; Gdiplus::Brush::SetNativeBrush
PUBLIC	?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Brush::SetStatus
PUBLIC	??_GBrush@Gdiplus@@UAEPAXI@Z			; Gdiplus::Brush::`scalar deleting destructor'
PUBLIC	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z	; Gdiplus::SolidBrush::SolidBrush
PUBLIC	??1SolidBrush@Gdiplus@@UAE@XZ			; Gdiplus::SolidBrush::~SolidBrush
PUBLIC	??_GSolidBrush@Gdiplus@@UAEPAXI@Z		; Gdiplus::SolidBrush::`scalar deleting destructor'
PUBLIC	??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z		; Gdiplus::Pen::Pen
PUBLIC	??1Pen@Gdiplus@@QAE@XZ				; Gdiplus::Pen::~Pen
PUBLIC	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z	; Gdiplus::GraphicsPath::GraphicsPath
PUBLIC	??1GraphicsPath@Gdiplus@@QAE@XZ			; Gdiplus::GraphicsPath::~GraphicsPath
PUBLIC	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
PUBLIC	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
PUBLIC	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
PUBLIC	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
PUBLIC	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
PUBLIC	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
PUBLIC	??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z		; Gdiplus::Graphics::Graphics
PUBLIC	??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z		; Gdiplus::Graphics::Graphics
PUBLIC	??1Graphics@Gdiplus@@QAE@XZ			; Gdiplus::Graphics::~Graphics
PUBLIC	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
PUBLIC	?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::DrawPath
PUBLIC	?Clear@Graphics@Gdiplus@@QAE?AW4Status@2@ABVColor@2@@Z ; Gdiplus::Graphics::Clear
PUBLIC	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
PUBLIC	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
PUBLIC	?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HH@Z ; Gdiplus::Graphics::DrawImage
PUBLIC	?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ; Gdiplus::Graphics::SetNativeGraphics
PUBLIC	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
PUBLIC	?GetImageEncodersSize@Gdiplus@@YA?AW4Status@1@PAI0@Z ; Gdiplus::GetImageEncodersSize
PUBLIC	?GetImageEncoders@Gdiplus@@YA?AW4Status@1@IIPAVImageCodecInfo@1@@Z ; Gdiplus::GetImageEncoders
PUBLIC	?GetDefaultFontScale@@YAMPB_W@Z			; GetDefaultFontScale
PUBLIC	?ChangeFontScale@@YAX_N@Z			; ChangeFontScale
PUBLIC	??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ		; swprintf_s<32>
PUBLIC	?SwitchToNextFont@@YAXXZ			; SwitchToNextFont
PUBLIC	??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z		; wcscpy_s<256>
PUBLIC	??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ	; swprintf_s<256>
PUBLIC	?InitializeFonts@@YAXXZ				; InitializeFonts
PUBLIC	?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z		; MyRegisterClass
PUBLIC	?InitInstance@@YAHPAUHINSTANCE__@@H@Z		; InitInstance
PUBLIC	?WndProc@@YGJPAUHWND__@@IIJ@Z			; WndProc
PUBLIC	?About@@YGHPAUHWND__@@IIJ@Z			; About
PUBLIC	?DRAW_TEST@@YAHPAVBitmap@Gdiplus@@HHHPAUHWND__@@@Z ; DRAW_TEST
PUBLIC	?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z	; DRAW_TEST__
PUBLIC	?GetEncoderClsid@@YAHPB_WPAU_GUID@@@Z		; GetEncoderClsid
PUBLIC	?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z		; kubik
PUBLIC	?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z		; shmarkli
PUBLIC	??_7Image@Gdiplus@@6B@				; Gdiplus::Image::`vftable'
PUBLIC	??_7Bitmap@Gdiplus@@6B@				; Gdiplus::Bitmap::`vftable'
PUBLIC	??_7Brush@Gdiplus@@6B@				; Gdiplus::Brush::`vftable'
PUBLIC	??_7SolidBrush@Gdiplus@@6B@			; Gdiplus::SolidBrush::`vftable'
PUBLIC	??_R4Brush@Gdiplus@@6B@				; Gdiplus::Brush::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBrush@Gdiplus@@@8			; Gdiplus::Brush `RTTI Type Descriptor'
PUBLIC	??_R3Brush@Gdiplus@@8				; Gdiplus::Brush::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Brush@Gdiplus@@8				; Gdiplus::Brush::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Brush@Gdiplus@@8			; Gdiplus::Brush::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@GdiplusBase@Gdiplus@@8		; Gdiplus::GdiplusBase::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVGdiplusBase@Gdiplus@@@8			; Gdiplus::GdiplusBase `RTTI Type Descriptor'
PUBLIC	??_R3GdiplusBase@Gdiplus@@8			; Gdiplus::GdiplusBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GdiplusBase@Gdiplus@@8			; Gdiplus::GdiplusBase::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GdiplusBase@Gdiplus@@8		; Gdiplus::GdiplusBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Bitmap@Gdiplus@@6B@			; Gdiplus::Bitmap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBitmap@Gdiplus@@@8			; Gdiplus::Bitmap `RTTI Type Descriptor'
PUBLIC	??_R3Bitmap@Gdiplus@@8				; Gdiplus::Bitmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Bitmap@Gdiplus@@8				; Gdiplus::Bitmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Bitmap@Gdiplus@@8			; Gdiplus::Bitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Image@Gdiplus@@8			; Gdiplus::Image::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVImage@Gdiplus@@@8			; Gdiplus::Image `RTTI Type Descriptor'
PUBLIC	??_R3Image@Gdiplus@@8				; Gdiplus::Image::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Image@Gdiplus@@8				; Gdiplus::Image::`RTTI Base Class Array'
PUBLIC	??_R4Image@Gdiplus@@6B@				; Gdiplus::Image::`RTTI Complete Object Locator'
PUBLIC	??_R4SolidBrush@Gdiplus@@6B@			; Gdiplus::SolidBrush::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSolidBrush@Gdiplus@@@8			; Gdiplus::SolidBrush `RTTI Type Descriptor'
PUBLIC	??_R3SolidBrush@Gdiplus@@8			; Gdiplus::SolidBrush::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SolidBrush@Gdiplus@@8			; Gdiplus::SolidBrush::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SolidBrush@Gdiplus@@8		; Gdiplus::SolidBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3c23d70a
PUBLIC	__real@3f000000
PUBLIC	__real@3f68f5c3
PUBLIC	__real@3f7851ec
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc47ae147ae147b
PUBLIC	__real@3fc70a3d70a3d70a
PUBLIC	__real@3fd51eb851eb851f
PUBLIC	__real@3fd5c28f5c28f5c3
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe199999999999a
PUBLIC	__real@3fe7ae147ae147ae
PUBLIC	__real@3fe8000000000000
PUBLIC	__real@3fe9eb851eb851ec
PUBLIC	__real@3fefae147ae147ae
PUBLIC	__real@4009c28f5c28f5c3
PUBLIC	__real@400a666666666666
PUBLIC	__real@400dc28f5c28f5c3
PUBLIC	__real@400e666666666666
PUBLIC	__real@4013147ae147ae14
PUBLIC	__real@4013cccccccccccd
PUBLIC	__real@4017333333333333
PUBLIC	__real@4017851eb851eb85
PUBLIC	__real@40183d70a3d70a3d
PUBLIC	__real@401a000000000000
PUBLIC	__real@401c47ae147ae148
PUBLIC	__real@401ccccccccccccd
PUBLIC	__real@402075c28f5c28f6
PUBLIC	__real@40224ccccccccccd
PUBLIC	__real@40228f5c28f5c28f
PUBLIC	__real@40239eb851eb851f
PUBLIC	__real@4023b33333333333
PUBLIC	__real@4023d70a3d70a3d7
PUBLIC	__real@40244ccccccccccd
PUBLIC	__real@4025d70a3d70a3d7
PUBLIC	__real@40268a3d70a3d70a
PUBLIC	__real@4027d70a3d70a3d7
PUBLIC	__real@4028800000000000
PUBLIC	__real@40288a3d70a3d70a
PUBLIC	__real@4028e66666666666
PUBLIC	__real@402a8a3d70a3d70a
PUBLIC	__real@402a99999999999a
PUBLIC	__real@402acccccccccccd
PUBLIC	__real@4037400000000000
PUBLIC	__real@4037733333333333
PUBLIC	__real@42b40000
PUBLIC	__real@43340000
PUBLIC	__real@43870000
PUBLIC	__real@43b40000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_wcscmp:PROC
EXTRN	_wcscpy_s:PROC
EXTRN	_wcslen:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__CreateSolidBrush@4:PROC
EXTRN	__imp__SetUserObjectInformationW@16:PROC
EXTRN	__imp__GetMessageW@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageW@4:PROC
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	__imp__DialogBoxParamW@20:PROC
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__SetTimer@16:PROC
EXTRN	__imp__KillTimer@8:PROC
EXTRN	__imp__LoadAcceleratorsW@8:PROC
EXTRN	__imp__TranslateAcceleratorW@12:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__LoadCursorW@8:PROC
EXTRN	__imp__LoadIconW@8:PROC
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	__wtof:PROC
EXTRN	__wtoi:PROC
EXTRN	_swprintf_s:PROC
EXTRN	_vswprintf_s:PROC
EXTRN	__vswprintf:PROC
EXTRN	_GdipAlloc@4:PROC
EXTRN	_GdipFree@4:PROC
EXTRN	_GdiplusStartup@12:PROC
EXTRN	_GdiplusShutdown@4:PROC
EXTRN	??_EImage@Gdiplus@@UAEPAXI@Z:PROC		; Gdiplus::Image::`vector deleting destructor'
EXTRN	??_EBitmap@Gdiplus@@UAEPAXI@Z:PROC		; Gdiplus::Bitmap::`vector deleting destructor'
EXTRN	_GdipCreatePath@8:PROC
EXTRN	_GdipDeletePath@4:PROC
EXTRN	_GdipStartPathFigure@4:PROC
EXTRN	_GdipClosePathFigure@4:PROC
EXTRN	_GdipAddPathLineI@20:PROC
EXTRN	_GdipAddPathArcI@28:PROC
EXTRN	_GdipTransformPath@8:PROC
EXTRN	_GdipCreateMatrix@4:PROC
EXTRN	_GdipDeleteMatrix@4:PROC
EXTRN	_GdipSetMatrixElements@28:PROC
EXTRN	_GdipTranslateMatrix@16:PROC
EXTRN	_GdipCloneBrush@8:PROC
EXTRN	_GdipDeleteBrush@4:PROC
EXTRN	_GdipCreateSolidFill@8:PROC
EXTRN	_GdipCreatePen1@16:PROC
EXTRN	_GdipDeletePen@4:PROC
EXTRN	_GdipCloneImage@8:PROC
EXTRN	_GdipDisposeImage@4:PROC
EXTRN	_GdipSaveImageToFile@16:PROC
EXTRN	_GdipGetImageGraphicsContext@8:PROC
EXTRN	_GdipCreateBitmapFromGraphics@16:PROC
EXTRN	_GdipCreateFromHDC@8:PROC
EXTRN	_GdipDeleteGraphics@4:PROC
EXTRN	_GdipDrawLineI@24:PROC
EXTRN	_GdipDrawPath@12:PROC
EXTRN	_GdipGraphicsClear@8:PROC
EXTRN	_GdipFillPath@12:PROC
EXTRN	_GdipDrawImageI@16:PROC
EXTRN	_GdipGetImageEncodersSize@8:PROC
EXTRN	_GdipGetImageEncoders@12:PROC
EXTRN	_GdipCreateFontFamilyFromName@12:PROC
EXTRN	_GdipDeleteFontFamily@4:PROC
EXTRN	_GdipCreateFont@20:PROC
EXTRN	_GdipDeleteFont@4:PROC
EXTRN	_GdipDrawString@28:PROC
EXTRN	??_EBrush@Gdiplus@@UAEPAXI@Z:PROC		; Gdiplus::Brush::`vector deleting destructor'
EXTRN	??_ESolidBrush@Gdiplus@@UAEPAXI@Z:PROC		; Gdiplus::SolidBrush::`vector deleting destructor'
EXTRN	?loop@@YAHHH@Z:PROC				; loop
EXTRN	?setup_00@@YAXXZ:PROC				; setup_00
EXTRN	?setup_0@@YAXH@Z:PROC				; setup_0
EXTRN	?setup_1@@YAXH@Z:PROC				; setup_1
EXTRN	?setup_2@@YAXH@Z:PROC				; setup_2
EXTRN	?setup_3@@YAXXZ:PROC				; setup_3
EXTRN	?open_setup@@YAHPBDK@Z:PROC			; open_setup
EXTRN	?close_setup@@YAHXZ:PROC			; close_setup
EXTRN	?save_setup@@YAHXZ:PROC				; save_setup
EXTRN	?set_setup@@YAHPB_W0@Z:PROC			; set_setup
EXTRN	?get_setup@@YAHPB_WPA_WH@Z:PROC			; get_setup
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	_EncoderQuality:BYTE
EXTRN	?mas_pr@@3PAY0L@HA:BYTE				; mas_pr
EXTRN	?mas_preview@@3PAY0L@HA:BYTE			; mas_preview
EXTRN	?fig_next@@3PAY03HA:BYTE			; fig_next
EXTRN	?fl_s@@3HA:DWORD				; fl_s
EXTRN	?hc@@3HA:DWORD					; hc
EXTRN	?vaj_mem_2@@3HA:DWORD				; vaj_mem_2
EXTRN	?total@@3HA:DWORD				; total
EXTRN	?max_total_norm@@3HA:DWORD			; max_total_norm
EXTRN	?max_total_adv@@3HA:DWORD			; max_total_adv
EXTRN	?pause@@3HA:DWORD				; pause
EXTRN	?etap@@3HA:DWORD				; etap
EXTRN	?takt@@3KA:DWORD				; takt
EXTRN	?prsc@@3KA:DWORD				; prsc
EXTRN	?sopli@@3PAHA:BYTE				; sopli
EXTRN	?f_sop@@3HA:DWORD				; f_sop
EXTRN	?f_sop_ver@@3HA:DWORD				; f_sop_ver
EXTRN	?ready@@3HA:DWORD				; ready
EXTRN	?f_next_level@@3HA:DWORD			; f_next_level
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?save@?8??WndProc@@YGJPAUHWND__@@IIJ@Z@4HA
_BSS	SEGMENT
?save@?8??WndProc@@YGJPAUHWND__@@IIJ@Z@4HA DD 01H DUP (?) ; `WndProc'::`9'::save
_BSS	ENDS
;	COMDAT ?im@?1??DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z@4HA
_BSS	SEGMENT
?im@?1??DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z@4HA DD 01H DUP (?) ; `DRAW_TEST__'::`2'::im
_BSS	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43870000
CONST	SEGMENT
__real@43870000 DD 043870000r			; 270
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@4037733333333333
CONST	SEGMENT
__real@4037733333333333 DQ 04037733333333333r	; 23.45
CONST	ENDS
;	COMDAT __real@4037400000000000
CONST	SEGMENT
__real@4037400000000000 DQ 04037400000000000r	; 23.25
CONST	ENDS
;	COMDAT __real@402acccccccccccd
CONST	SEGMENT
__real@402acccccccccccd DQ 0402acccccccccccdr	; 13.4
CONST	ENDS
;	COMDAT __real@402a99999999999a
CONST	SEGMENT
__real@402a99999999999a DQ 0402a99999999999ar	; 13.3
CONST	ENDS
;	COMDAT __real@402a8a3d70a3d70a
CONST	SEGMENT
__real@402a8a3d70a3d70a DQ 0402a8a3d70a3d70ar	; 13.27
CONST	ENDS
;	COMDAT __real@4028e66666666666
CONST	SEGMENT
__real@4028e66666666666 DQ 04028e66666666666r	; 12.45
CONST	ENDS
;	COMDAT __real@40288a3d70a3d70a
CONST	SEGMENT
__real@40288a3d70a3d70a DQ 040288a3d70a3d70ar	; 12.27
CONST	ENDS
;	COMDAT __real@4028800000000000
CONST	SEGMENT
__real@4028800000000000 DQ 04028800000000000r	; 12.25
CONST	ENDS
;	COMDAT __real@4027d70a3d70a3d7
CONST	SEGMENT
__real@4027d70a3d70a3d7 DQ 04027d70a3d70a3d7r	; 11.92
CONST	ENDS
;	COMDAT __real@40268a3d70a3d70a
CONST	SEGMENT
__real@40268a3d70a3d70a DQ 040268a3d70a3d70ar	; 11.27
CONST	ENDS
;	COMDAT __real@4025d70a3d70a3d7
CONST	SEGMENT
__real@4025d70a3d70a3d7 DQ 04025d70a3d70a3d7r	; 10.92
CONST	ENDS
;	COMDAT __real@40244ccccccccccd
CONST	SEGMENT
__real@40244ccccccccccd DQ 040244ccccccccccdr	; 10.15
CONST	ENDS
;	COMDAT __real@4023d70a3d70a3d7
CONST	SEGMENT
__real@4023d70a3d70a3d7 DQ 04023d70a3d70a3d7r	; 9.92
CONST	ENDS
;	COMDAT __real@4023b33333333333
CONST	SEGMENT
__real@4023b33333333333 DQ 04023b33333333333r	; 9.85
CONST	ENDS
;	COMDAT __real@40239eb851eb851f
CONST	SEGMENT
__real@40239eb851eb851f DQ 040239eb851eb851fr	; 9.81
CONST	ENDS
;	COMDAT __real@40228f5c28f5c28f
CONST	SEGMENT
__real@40228f5c28f5c28f DQ 040228f5c28f5c28fr	; 9.28
CONST	ENDS
;	COMDAT __real@40224ccccccccccd
CONST	SEGMENT
__real@40224ccccccccccd DQ 040224ccccccccccdr	; 9.15
CONST	ENDS
;	COMDAT __real@402075c28f5c28f6
CONST	SEGMENT
__real@402075c28f5c28f6 DQ 0402075c28f5c28f6r	; 8.23
CONST	ENDS
;	COMDAT __real@401ccccccccccccd
CONST	SEGMENT
__real@401ccccccccccccd DQ 0401ccccccccccccdr	; 7.2
CONST	ENDS
;	COMDAT __real@401c47ae147ae148
CONST	SEGMENT
__real@401c47ae147ae148 DQ 0401c47ae147ae148r	; 7.07
CONST	ENDS
;	COMDAT __real@401a000000000000
CONST	SEGMENT
__real@401a000000000000 DQ 0401a000000000000r	; 6.5
CONST	ENDS
;	COMDAT __real@40183d70a3d70a3d
CONST	SEGMENT
__real@40183d70a3d70a3d DQ 040183d70a3d70a3dr	; 6.06
CONST	ENDS
;	COMDAT __real@4017851eb851eb85
CONST	SEGMENT
__real@4017851eb851eb85 DQ 04017851eb851eb85r	; 5.88
CONST	ENDS
;	COMDAT __real@4017333333333333
CONST	SEGMENT
__real@4017333333333333 DQ 04017333333333333r	; 5.8
CONST	ENDS
;	COMDAT __real@4013cccccccccccd
CONST	SEGMENT
__real@4013cccccccccccd DQ 04013cccccccccccdr	; 4.95
CONST	ENDS
;	COMDAT __real@4013147ae147ae14
CONST	SEGMENT
__real@4013147ae147ae14 DQ 04013147ae147ae14r	; 4.77
CONST	ENDS
;	COMDAT __real@400e666666666666
CONST	SEGMENT
__real@400e666666666666 DQ 0400e666666666666r	; 3.8
CONST	ENDS
;	COMDAT __real@400dc28f5c28f5c3
CONST	SEGMENT
__real@400dc28f5c28f5c3 DQ 0400dc28f5c28f5c3r	; 3.72
CONST	ENDS
;	COMDAT __real@400a666666666666
CONST	SEGMENT
__real@400a666666666666 DQ 0400a666666666666r	; 3.3
CONST	ENDS
;	COMDAT __real@4009c28f5c28f5c3
CONST	SEGMENT
__real@4009c28f5c28f5c3 DQ 04009c28f5c28f5c3r	; 3.22
CONST	ENDS
;	COMDAT __real@3fefae147ae147ae
CONST	SEGMENT
__real@3fefae147ae147ae DQ 03fefae147ae147aer	; 0.99
CONST	ENDS
;	COMDAT __real@3fe9eb851eb851ec
CONST	SEGMENT
__real@3fe9eb851eb851ec DQ 03fe9eb851eb851ecr	; 0.81
CONST	ENDS
;	COMDAT __real@3fe8000000000000
CONST	SEGMENT
__real@3fe8000000000000 DQ 03fe8000000000000r	; 0.75
CONST	ENDS
;	COMDAT __real@3fe7ae147ae147ae
CONST	SEGMENT
__real@3fe7ae147ae147ae DQ 03fe7ae147ae147aer	; 0.74
CONST	ENDS
;	COMDAT __real@3fe199999999999a
CONST	SEGMENT
__real@3fe199999999999a DQ 03fe199999999999ar	; 0.55
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd5c28f5c28f5c3
CONST	SEGMENT
__real@3fd5c28f5c28f5c3 DQ 03fd5c28f5c28f5c3r	; 0.34
CONST	ENDS
;	COMDAT __real@3fd51eb851eb851f
CONST	SEGMENT
__real@3fd51eb851eb851f DQ 03fd51eb851eb851fr	; 0.33
CONST	ENDS
;	COMDAT __real@3fc70a3d70a3d70a
CONST	SEGMENT
__real@3fc70a3d70a3d70a DQ 03fc70a3d70a3d70ar	; 0.18
CONST	ENDS
;	COMDAT __real@3fc47ae147ae147b
CONST	SEGMENT
__real@3fc47ae147ae147b DQ 03fc47ae147ae147br	; 0.16
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7851ec
CONST	SEGMENT
__real@3f7851ec DD 03f7851ecr			; 0.97
CONST	ENDS
;	COMDAT __real@3f68f5c3
CONST	SEGMENT
__real@3f68f5c3 DD 03f68f5c3r			; 0.91
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3c23d70a
CONST	SEGMENT
__real@3c23d70a DD 03c23d70ar			; 0.01
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@SolidBrush@Gdiplus@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SolidBrush@Gdiplus@@8 DD FLAT:??_R0?AVSolidBrush@Gdiplus@@@8 ; Gdiplus::SolidBrush::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SolidBrush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R2SolidBrush@Gdiplus@@8
rdata$r	SEGMENT
??_R2SolidBrush@Gdiplus@@8 DD FLAT:??_R1A@?0A@EA@SolidBrush@Gdiplus@@8 ; Gdiplus::SolidBrush::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Brush@Gdiplus@@8
	DD	FLAT:??_R13?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R3SolidBrush@Gdiplus@@8
rdata$r	SEGMENT
??_R3SolidBrush@Gdiplus@@8 DD 00H			; Gdiplus::SolidBrush::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SolidBrush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSolidBrush@Gdiplus@@@8
data$r	SEGMENT
??_R0?AVSolidBrush@Gdiplus@@@8 DD FLAT:??_7type_info@@6B@ ; Gdiplus::SolidBrush `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSolidBrush@Gdiplus@@', 00H
data$r	ENDS
;	COMDAT ??_R4SolidBrush@Gdiplus@@6B@
rdata$r	SEGMENT
??_R4SolidBrush@Gdiplus@@6B@ DD 00H			; Gdiplus::SolidBrush::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSolidBrush@Gdiplus@@@8
	DD	FLAT:??_R3SolidBrush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R4Image@Gdiplus@@6B@
rdata$r	SEGMENT
??_R4Image@Gdiplus@@6B@ DD 00H				; Gdiplus::Image::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVImage@Gdiplus@@@8
	DD	FLAT:??_R3Image@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R2Image@Gdiplus@@8
rdata$r	SEGMENT
??_R2Image@Gdiplus@@8 DD FLAT:??_R1A@?0A@EA@Image@Gdiplus@@8 ; Gdiplus::Image::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R3Image@Gdiplus@@8
rdata$r	SEGMENT
??_R3Image@Gdiplus@@8 DD 00H				; Gdiplus::Image::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Image@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVImage@Gdiplus@@@8
data$r	SEGMENT
??_R0?AVImage@Gdiplus@@@8 DD FLAT:??_7type_info@@6B@	; Gdiplus::Image `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVImage@Gdiplus@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Image@Gdiplus@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Image@Gdiplus@@8 DD FLAT:??_R0?AVImage@Gdiplus@@@8 ; Gdiplus::Image::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Image@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Bitmap@Gdiplus@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Bitmap@Gdiplus@@8 DD FLAT:??_R0?AVBitmap@Gdiplus@@@8 ; Gdiplus::Bitmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Bitmap@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R2Bitmap@Gdiplus@@8
rdata$r	SEGMENT
??_R2Bitmap@Gdiplus@@8 DD FLAT:??_R1A@?0A@EA@Bitmap@Gdiplus@@8 ; Gdiplus::Bitmap::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Image@Gdiplus@@8
	DD	FLAT:??_R13?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R3Bitmap@Gdiplus@@8
rdata$r	SEGMENT
??_R3Bitmap@Gdiplus@@8 DD 00H				; Gdiplus::Bitmap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Bitmap@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBitmap@Gdiplus@@@8
data$r	SEGMENT
??_R0?AVBitmap@Gdiplus@@@8 DD FLAT:??_7type_info@@6B@	; Gdiplus::Bitmap `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBitmap@Gdiplus@@', 00H
data$r	ENDS
;	COMDAT ??_R4Bitmap@Gdiplus@@6B@
rdata$r	SEGMENT
??_R4Bitmap@Gdiplus@@6B@ DD 00H				; Gdiplus::Bitmap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBitmap@Gdiplus@@@8
	DD	FLAT:??_R3Bitmap@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GdiplusBase@Gdiplus@@8 DD FLAT:??_R0?AVGdiplusBase@Gdiplus@@@8 ; Gdiplus::GdiplusBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R2GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT
??_R2GdiplusBase@Gdiplus@@8 DD FLAT:??_R1A@?0A@EA@GdiplusBase@Gdiplus@@8 ; Gdiplus::GdiplusBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT
??_R3GdiplusBase@Gdiplus@@8 DD 00H			; Gdiplus::GdiplusBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGdiplusBase@Gdiplus@@@8
data$r	SEGMENT
??_R0?AVGdiplusBase@Gdiplus@@@8 DD FLAT:??_7type_info@@6B@ ; Gdiplus::GdiplusBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGdiplusBase@Gdiplus@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	SEGMENT
??_R13?0A@EA@GdiplusBase@Gdiplus@@8 DD FLAT:??_R0?AVGdiplusBase@Gdiplus@@@8 ; Gdiplus::GdiplusBase::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Brush@Gdiplus@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Brush@Gdiplus@@8 DD FLAT:??_R0?AVBrush@Gdiplus@@@8 ; Gdiplus::Brush::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Brush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R2Brush@Gdiplus@@8
rdata$r	SEGMENT
??_R2Brush@Gdiplus@@8 DD FLAT:??_R1A@?0A@EA@Brush@Gdiplus@@8 ; Gdiplus::Brush::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@GdiplusBase@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R3Brush@Gdiplus@@8
rdata$r	SEGMENT
??_R3Brush@Gdiplus@@8 DD 00H				; Gdiplus::Brush::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Brush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBrush@Gdiplus@@@8
data$r	SEGMENT
??_R0?AVBrush@Gdiplus@@@8 DD FLAT:??_7type_info@@6B@	; Gdiplus::Brush `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBrush@Gdiplus@@', 00H
data$r	ENDS
;	COMDAT ??_R4Brush@Gdiplus@@6B@
rdata$r	SEGMENT
??_R4Brush@Gdiplus@@6B@ DD 00H				; Gdiplus::Brush::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBrush@Gdiplus@@@8
	DD	FLAT:??_R3Brush@Gdiplus@@8
rdata$r	ENDS
;	COMDAT ??_7SolidBrush@Gdiplus@@6B@
CONST	SEGMENT
??_7SolidBrush@Gdiplus@@6B@ DD FLAT:??_R4SolidBrush@Gdiplus@@6B@ ; Gdiplus::SolidBrush::`vftable'
	DD	FLAT:??_ESolidBrush@Gdiplus@@UAEPAXI@Z
	DD	FLAT:?Clone@Brush@Gdiplus@@UBEPAV12@XZ
CONST	ENDS
;	COMDAT ??_7Brush@Gdiplus@@6B@
CONST	SEGMENT
??_7Brush@Gdiplus@@6B@ DD FLAT:??_R4Brush@Gdiplus@@6B@	; Gdiplus::Brush::`vftable'
	DD	FLAT:??_EBrush@Gdiplus@@UAEPAXI@Z
	DD	FLAT:?Clone@Brush@Gdiplus@@UBEPAV12@XZ
CONST	ENDS
;	COMDAT ??_7Bitmap@Gdiplus@@6B@
CONST	SEGMENT
??_7Bitmap@Gdiplus@@6B@ DD FLAT:??_R4Bitmap@Gdiplus@@6B@ ; Gdiplus::Bitmap::`vftable'
	DD	FLAT:??_EBitmap@Gdiplus@@UAEPAXI@Z
	DD	FLAT:?Clone@Image@Gdiplus@@UAEPAV12@XZ
CONST	ENDS
;	COMDAT ??_7Image@Gdiplus@@6B@
CONST	SEGMENT
??_7Image@Gdiplus@@6B@ DD FLAT:??_R4Image@Gdiplus@@6B@	; Gdiplus::Image::`vftable'
	DD	FLAT:??_EImage@Gdiplus@@UAEPAXI@Z
	DD	FLAT:?Clone@Image@Gdiplus@@UAEPAV12@XZ
CONST	ENDS
xdata$x	SEGMENT
__unwindtable$?SwitchToNextFont@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SwitchToNextFont@@YAXXZ$0
__unwindtable$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z$1
__unwindtable$?InitializeFonts@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializeFonts@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?InitializeFonts@@YAXXZ$1
__ehfuncinfo$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z DD 019930522H
	DD	01fH
	DD	FLAT:__unwindtable$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?InitializeFonts@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?InitializeFonts@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?SwitchToNextFont@@YAXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SwitchToNextFont@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$5
__unwindtable$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$8
	DD	08H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$10
	DD	0aH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$12
	DD	0cH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$13
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$14
	DD	0eH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$15
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$16
	DD	010H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$17
	DD	011H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$18
	DD	012H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$19
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$20
	DD	014H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$21
	DD	015H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$22
	DD	016H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$23
	DD	017H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$24
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$25
	DD	019H
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$26
	DD	01aH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$27
	DD	01bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$28
	DD	0bH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$29
	DD	01dH
	DD	FLAT:__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$30
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z$0
__ehfuncinfo$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@Brush@Gdiplus@@UBEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@Brush@Gdiplus@@UBEPAV12@XZ$0
__ehfuncinfo$?Clone@Brush@Gdiplus@@UBEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@Brush@Gdiplus@@UBEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z$0
__ehfuncinfo$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@Image@Gdiplus@@UAEPAV12@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@Image@Gdiplus@@UAEPAV12@XZ$0
__ehfuncinfo$?Clone@Image@Gdiplus@@UAEPAV12@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@Image@Gdiplus@@UAEPAV12@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_farb_2$ = -88						; size = 12
_graphics$ = -76					; size = 8
_kb1$ = -68						; size = 8
_kb2$ = -60						; size = 8
_myMatrix1$ = -52					; size = 8
_myMatrix2$ = -44					; size = 8
$T2 = -36						; size = 4
$T3 = -32						; size = 4
tv274 = -28						; size = 4
tv250 = -24						; size = 4
_i$4 = -20						; size = 4
_i$5 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bmp$ = 8						; size = 4
_ak$ = 12						; size = 4
_xend$ = 16						; size = 4
_yend$ = 20						; size = 4
?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z PROC		; shmarkli
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 936
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 937
	cmp	DWORD PTR ?f_sop_ver@@3HA, 1		; f_sop_ver
	jne	SHORT $LN10@shmarkli
; Line 938
	mov	DWORD PTR _i$5[ebp], 0
	jmp	SHORT $LN9@shmarkli
$LN8@shmarkli:
	mov	eax, DWORD PTR _i$5[ebp]
	add	eax, 1
	mov	DWORD PTR _i$5[ebp], eax
$LN9@shmarkli:
	cmp	DWORD PTR _i$5[ebp], 22			; 00000016H
	jge	SHORT $LN7@shmarkli
; Line 939
	mov	ecx, DWORD PTR _i$5[ebp]
	and	ecx, -2147483647			; 80000001H
	jns	SHORT $LN24@shmarkli
	dec	ecx
	or	ecx, -2					; fffffffeH
	inc	ecx
$LN24@shmarkli:
	add	ecx, 1
	mov	edx, DWORD PTR _i$5[ebp]
	mov	DWORD PTR ?sopli@@3PAHA[edx*4], ecx
	jmp	SHORT $LN8@shmarkli
$LN7@shmarkli:
; Line 940
	mov	DWORD PTR ?f_sop@@3HA, 1		; f_sop
; Line 941
	mov	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
$LN10@shmarkli:
; Line 943
	mov	eax, DWORD PTR _yend$[ebp]
	mov	DWORD PTR _xend$[ebp], eax
; Line 944
	mov	ecx, DWORD PTR _bmp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z	; Gdiplus::Graphics::Graphics
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 945
	push	0
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 946
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 947
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 948
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 949
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 950
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_2$[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 952
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	call	??0Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	call	??0Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 953
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?f_sop@@3HA		; f_sop
	imul	eax, DWORD PTR _xend$[ebp]
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 954
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	ecx, 11					; 0000000bH
	sub	ecx, DWORD PTR ?f_sop@@3HA		; f_sop
	add	ecx, 1
	imul	ecx, DWORD PTR _xend$[ebp]
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 955
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN6@shmarkli
$LN5@shmarkli:
	mov	edx, DWORD PTR _i$4[ebp]
	add	edx, 1
	mov	DWORD PTR _i$4[ebp], edx
$LN6@shmarkli:
	cmp	DWORD PTR _i$4[ebp], 22			; 00000016H
	jge	$LN4@shmarkli
; Line 956
	lea	eax, DWORD PTR _myMatrix1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 957
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 958
	mov	edx, DWORD PTR _i$4[ebp]
	cmp	DWORD PTR ?sopli@@3PAHA[edx*4], 0
	je	SHORT $LN3@shmarkli
	cmp	DWORD PTR ?f_sop@@3HA, 12		; f_sop, 0000000cH
	je	SHORT $LN3@shmarkli
; Line 959
	mov	eax, DWORD PTR _i$4[ebp]
	cmp	DWORD PTR ?sopli@@3PAHA[eax*4], 1
	jne	SHORT $LN13@shmarkli
	lea	ecx, DWORD PTR _kb1$[ebp]
	mov	DWORD PTR tv250[ebp], ecx
	jmp	SHORT $LN14@shmarkli
$LN13@shmarkli:
	lea	edx, DWORD PTR _kb2$[ebp]
	mov	DWORD PTR tv250[ebp], edx
$LN14@shmarkli:
	mov	eax, DWORD PTR tv250[ebp]
	push	eax
	lea	ecx, DWORD PTR _farb_2$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
$LN3@shmarkli:
; Line 961
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	call	?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::Matrix::Reset
; Line 962
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	imul	edx, DWORD PTR _xend$[ebp], 0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 963
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	call	?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::Matrix::Reset
; Line 964
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	imul	eax, DWORD PTR _xend$[ebp], 0
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 965
	jmp	$LN5@shmarkli
$LN4@shmarkli:
; Line 967
	cmp	DWORD PTR ?f_sop@@3HA, 12		; f_sop, 0000000cH
	jne	SHORT $LN15@shmarkli
	mov	DWORD PTR tv274[ebp], 0
	jmp	SHORT $LN16@shmarkli
$LN15@shmarkli:
	mov	ecx, DWORD PTR ?f_sop@@3HA		; f_sop
	add	ecx, 1
	mov	DWORD PTR tv274[ebp], ecx
$LN16@shmarkli:
	mov	edx, DWORD PTR tv274[ebp]
	mov	DWORD PTR ?f_sop@@3HA, edx		; f_sop
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN2@shmarkli
; Line 968
	push	0
	push	200000					; 00030d40H
	push	34949					; 00008885H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
; Line 969
	cmp	DWORD PTR ?typ_gry@@3HA, 0		; typ_gry
	jne	SHORT $LN1@shmarkli
	cmp	DWORD PTR ?f_next_level@@3HA, 1		; f_next_level
	jne	SHORT $LN1@shmarkli
; Line 970
	mov	DWORD PTR ?f_next_level@@3HA, 0		; f_next_level
; Line 971
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?setup_1@@YAXH@Z			; setup_1
	add	esp, 4
$LN1@shmarkli:
; Line 973
	push	0
	push	0
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 974
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
$LN2@shmarkli:
; Line 976
	mov	DWORD PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	call	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	call	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _farb_2$[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
	mov	eax, DWORD PTR $T3[ebp]
; Line 977
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$0:
	lea	ecx, DWORD PTR _graphics$[ebp]
	jmp	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$1:
	lea	ecx, DWORD PTR _kb1$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$2:
	lea	ecx, DWORD PTR _kb2$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$3:
	lea	ecx, DWORD PTR _farb_2$[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$4:
	lea	ecx, DWORD PTR _myMatrix1$[ebp]
	jmp	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
__unwindfunclet$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z$5:
	lea	ecx, DWORD PTR _myMatrix2$[ebp]
	jmp	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
__ehhandler$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z ENDP		; shmarkli
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -576						; size = 8
$T3 = -568						; size = 8
$T4 = -560						; size = 8
$T5 = -552						; size = 8
$T6 = -544						; size = 8
$T7 = -536						; size = 8
$T8 = -528						; size = 8
$T9 = -520						; size = 8
$T10 = -512						; size = 8
$T11 = -504						; size = 8
$T12 = -496						; size = 8
$T13 = -488						; size = 8
$T14 = -480						; size = 8
$T15 = -472						; size = 8
_wite$16 = -464						; size = 12
$T17 = -452						; size = 4
_wite$18 = -448						; size = 12
$T19 = -436						; size = 4
_blue$20 = -432						; size = 12
$T21 = -420						; size = 4
_wite$22 = -416						; size = 12
$T23 = -404						; size = 4
_farb_3$24 = -400					; size = 12
$T25 = -388						; size = 4
_farb_3$26 = -384					; size = 12
$T27 = -372						; size = 4
$T28 = -368						; size = 4
$T29 = -364						; size = 4
$T30 = -360						; size = 4
$T31 = -356						; size = 4
$T32 = -352						; size = 4
$T33 = -348						; size = 4
$T34 = -344						; size = 4
$T35 = -340						; size = 4
$T36 = -336						; size = 4
_wite$37 = -332						; size = 12
_blue$38 = -320						; size = 12
_blue$39 = -308						; size = 12
_farb_2$40 = -296					; size = 12
_farb_2$41 = -284					; size = 12
_fontFamily$ = -272					; size = 8
$T42 = -264						; size = 4
_farb_1$ = -260						; size = 8
_kb7$43 = -252						; size = 8
_kb5$44 = -244						; size = 8
_kb6$45 = -236						; size = 8
_kb5$46 = -228						; size = 8
tv876 = -220						; size = 4
tv296 = -216						; size = 4
_kb7$47 = -212						; size = 8
tv1120 = -204						; size = 4
_kb6$48 = -200						; size = 8
tv311 = -192						; size = 4
tv289 = -188						; size = 4
_khrest1$ = -184					; size = 8
_khrest2$ = -176					; size = 8
_kb7$49 = -168						; size = 8
_kb6$50 = -160						; size = 8
_kb3$ = -152						; size = 8
_j$51 = -144						; size = 4
_i$52 = -140						; size = 4
_pen_txt$ = -136					; size = 12
_mm$53 = -124						; size = 4
_kb1$ = -120						; size = 8
_kb2$ = -112						; size = 8
_i$54 = -104						; size = 4
_j$55 = -100						; size = 4
_font$ = -96						; size = 8
_myMatrix$ = -88					; size = 8
_aaa$56 = -80						; size = 3
_aaa$57 = -76						; size = 3
_Pen1$ = -72						; size = 8
_graphics$ = -64					; size = 8
_wbuf$ = -56						; size = 38
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bmp$ = 8						; size = 4
_ak$ = 12						; size = 4
_xend$ = 16						; size = 4
_yend$ = 20						; size = 4
?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z PROC		; kubik
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 505
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 564				; 00000234H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 506
	mov	eax, DWORD PTR _yend$[ebp]
	mov	DWORD PTR _xend$[ebp], eax
; Line 507
	mov	ecx, DWORD PTR _bmp$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z	; Gdiplus::Graphics::Graphics
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 508
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T19[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?Clear@Graphics@Gdiplus@@QAE?AW4Status@2@ABVColor@2@@Z ; Gdiplus::Graphics::Clear
; Line 510
	push	0
	mov	edx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	edx
	lea	ecx, DWORD PTR _fontFamily$[ebp]
	call	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 511
	push	2
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	mulss	xmm0, DWORD PTR ?g_fontScale@@3MA
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _fontFamily$[ebp]
	push	eax
	lea	ecx, DWORD PTR _font$[ebp]
	call	??0Font@Gdiplus@@QAE@PBVFontFamily@1@MHW4Unit@1@@Z ; Gdiplus::Font::Font
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 512
	push	0
	push	0
	push	0
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T34[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 515
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	push	ecx
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	imul	edx, DWORD PTR _xend$[ebp], 14
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T9[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	push	OFFSET $SG77583
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 517
	mov	ecx, DWORD PTR ?vaj_mem_2@@3HA		; vaj_mem_2
	push	ecx
	push	OFFSET $SG77589
	push	18					; 00000012H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 518
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yend$[ebp]
	shl	ecx, 3
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T13[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 520
	mov	eax, 1000				; 000003e8H
	sub	eax, DWORD PTR ?takt@@3KA		; takt
	xor	edx, edx
	mov	ecx, 40					; 00000028H
	div	ecx
	push	eax
	push	OFFSET $SG77595
	push	18					; 00000012H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 521
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 10
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 523
	mov	eax, 1000				; 000003e8H
	sub	eax, DWORD PTR ?takt@@3KA		; takt
	xor	edx, edx
	mov	ecx, 40					; 00000028H
	div	ecx
	cmp	eax, 23					; 00000017H
	jne	SHORT $LN33@kubik
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN33@kubik
; Line 524
	mov	edx, DWORD PTR ?takt@@3KA		; takt
	sub	edx, 40					; 00000028H
	push	edx
	push	OFFSET $SG77602
	push	18					; 00000012H
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 525
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 11
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si eax, xmm0
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T11[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	ecx, DWORD PTR _font$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
$LN33@kubik:
; Line 528
	mov	eax, DWORD PTR ?total@@3HA		; total
	push	eax
	push	OFFSET $SG77608
	push	18					; 00000012H
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 529
	lea	edx, DWORD PTR _pen_txt$[ebp]
	push	edx
	imul	eax, DWORD PTR _yend$[ebp], 12
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si ecx, xmm0
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	push	-1
	push	OFFSET $SG77614
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 530
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 13
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T15[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 532
	cmp	DWORD PTR ?etap@@3HA, 0			; etap
	jne	$LN32@kubik
; Line 533
	push	19					; 00000013H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	push	OFFSET $SG77621
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
; Line 534
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	__wtoi
	add	esp, 4
	mov	DWORD PTR _mm$53[ebp], eax
; Line 535
	mov	ecx, DWORD PTR ?max_total_norm@@3HA	; max_total_norm
	cmp	ecx, DWORD PTR _mm$53[ebp]
	jle	SHORT $LN36@kubik
	mov	edx, DWORD PTR ?max_total_norm@@3HA	; max_total_norm
	mov	DWORD PTR tv289[ebp], edx
	jmp	SHORT $LN37@kubik
$LN36@kubik:
	mov	eax, DWORD PTR _mm$53[ebp]
	mov	DWORD PTR tv289[ebp], eax
$LN37@kubik:
	mov	ecx, DWORD PTR tv289[ebp]
	mov	DWORD PTR ?max_total_norm@@3HA, ecx	; max_total_norm
; Line 536
	push	19					; 00000013H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	push	OFFSET $SG77623
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
; Line 537
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	__wtoi
	add	esp, 4
	mov	DWORD PTR _mm$53[ebp], eax
; Line 538
	mov	ecx, DWORD PTR ?max_total_adv@@3HA	; max_total_adv
	cmp	ecx, DWORD PTR _mm$53[ebp]
	jle	SHORT $LN38@kubik
	mov	edx, DWORD PTR ?max_total_adv@@3HA	; max_total_adv
	mov	DWORD PTR tv296[ebp], edx
	jmp	SHORT $LN39@kubik
$LN38@kubik:
	mov	eax, DWORD PTR _mm$53[ebp]
	mov	DWORD PTR tv296[ebp], eax
$LN39@kubik:
	mov	ecx, DWORD PTR tv296[ebp]
	mov	DWORD PTR ?max_total_adv@@3HA, ecx	; max_total_adv
; Line 539
	mov	edx, DWORD PTR ?max_total_norm@@3HA	; max_total_norm
	push	edx
	push	OFFSET $SG77624
	push	18					; 00000012H
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 540
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	push	OFFSET $SG77625
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 541
	mov	edx, DWORD PTR ?max_total_adv@@3HA	; max_total_adv
	push	edx
	push	OFFSET $SG77626
	push	18					; 00000012H
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 542
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	push	OFFSET $SG77627
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 543
	call	?save_setup@@YAHXZ			; save_setup
$LN32@kubik:
; Line 546
	cmp	DWORD PTR ?typ_gry@@3HA, 1		; typ_gry
	jne	SHORT $LN40@kubik
	mov	edx, DWORD PTR ?max_total_norm@@3HA	; max_total_norm
	mov	DWORD PTR tv311[ebp], edx
	jmp	SHORT $LN41@kubik
$LN40@kubik:
	mov	eax, DWORD PTR ?max_total_adv@@3HA	; max_total_adv
	mov	DWORD PTR tv311[ebp], eax
$LN41@kubik:
	mov	ecx, DWORD PTR tv311[ebp]
	push	ecx
	push	OFFSET $SG77628
	push	18					; 00000012H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 547
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 21
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	push	OFFSET $SG77634
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 548
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 22
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402acccccccccccd
	cvttsd2si eax, xmm0
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T14[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	ecx, DWORD PTR _font$[ebp]
	push	ecx
	push	-1
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 550
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	0
	push	0
	push	0
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T21[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	call	??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z	; Gdiplus::Pen::Pen
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 551
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037733333333333
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe199999999999a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe199999999999a
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 552
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037400000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 553
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe199999999999a
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 554
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037400000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028800000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028800000000000
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 555
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037733333333333
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028e66666666666
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028e66666666666
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 556
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028e66666666666
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe0000000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028800000000000
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 557
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037400000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028800000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037400000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe8000000000000
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 558
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037733333333333
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4028e66666666666
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4037733333333333
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe199999999999a
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 560
	push	0
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	push	0
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	push	0
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	push	0
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	push	0
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 562
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
; Line 563
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 564
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43870000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe9eb851eb851ec
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 565
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe9eb851eb851ec
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe9eb851eb851ec
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 566
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc70a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe9eb851eb851ec
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3f847ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 567
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
; Line 568
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
; Line 569
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43340000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 570
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@43870000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe7ae147ae147ae
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 571
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe7ae147ae147ae
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe7ae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 572
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@42b40000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fc47ae147ae147b
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fe7ae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fb999999999999a
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 573
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
; Line 574
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
; Line 575
	push	ecx
	movss	xmm0, DWORD PTR __real@43b40000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fd5c28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fd5c28f5c28f5c3
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fd51eb851eb851f
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fd51eb851eb851f
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ; Gdiplus::GraphicsPath::AddArc
; Line 576
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
; Line 577
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
; Line 578
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si ecx, xmm0
	push	ecx
	mov	edx, DWORD PTR _xend$[ebp]
	shl	edx, 1
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si eax, xmm0
	push	eax
	imul	ecx, DWORD PTR _xend$[ebp], 0
	push	ecx
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 579
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
; Line 580
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::StartFigure
; Line 581
	mov	edx, DWORD PTR _yend$[ebp]
	shl	edx, 1
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si eax, xmm0
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@3fefae147ae147ae
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 582
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::GraphicsPath::CloseFigure
; Line 583
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	??0Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 584
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR _xend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 644
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	240					; 000000f0H
	push	230					; 000000e6H
	push	230					; 000000e6H
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T29[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_1$[ebp]
	call	??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z	; Gdiplus::Pen::Pen
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 646
	mov	DWORD PTR _i$54[ebp], 0
	jmp	SHORT $LN31@kubik
$LN30@kubik:
	mov	eax, DWORD PTR _i$54[ebp]
	add	eax, 1
	mov	DWORD PTR _i$54[ebp], eax
$LN31@kubik:
	cmp	DWORD PTR _i$54[ebp], 11		; 0000000bH
	jge	$LN29@kubik
; Line 647
	mov	DWORD PTR _j$55[ebp], 0
	jmp	SHORT $LN28@kubik
$LN27@kubik:
	mov	ecx, DWORD PTR _j$55[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$55[ebp], ecx
$LN28@kubik:
	cmp	DWORD PTR _j$55[ebp], 22		; 00000016H
	jge	$LN26@kubik
; Line 648
	cmp	DWORD PTR ?etap@@3HA, 0			; etap
	jne	SHORT $LN42@kubik
	imul	edx, DWORD PTR _j$55[ebp], 44
	mov	eax, DWORD PTR _i$54[ebp]
	mov	ecx, DWORD PTR ?mas_preview@@3PAY0L@HA[edx+eax*4]
	mov	DWORD PTR tv876[ebp], ecx
	jmp	SHORT $LN43@kubik
$LN42@kubik:
	imul	edx, DWORD PTR _j$55[ebp], 44
	mov	eax, DWORD PTR _i$54[ebp]
	mov	ecx, DWORD PTR ?mas_pr@@3PAY0L@HA[edx+eax*4]
	mov	DWORD PTR tv876[ebp], ecx
$LN43@kubik:
	mov	edx, DWORD PTR tv876[ebp]
	mov	DWORD PTR _ak$[ebp], edx
; Line 649
	lea	eax, DWORD PTR _myMatrix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 650
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 651
	lea	edx, DWORD PTR _myMatrix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 652
	lea	eax, DWORD PTR _myMatrix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 653
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 654
	cmp	DWORD PTR _i$54[ebp], 10		; 0000000aH
	je	SHORT $LN25@kubik
	cmp	DWORD PTR _j$55[ebp], 21		; 00000015H
	je	SHORT $LN25@kubik
; Line 655
	lea	edx, DWORD PTR _khrest1$[ebp]
	push	edx
	lea	eax, DWORD PTR _farb_1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::DrawPath
; Line 656
	lea	ecx, DWORD PTR _khrest2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _farb_1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::DrawPath
$LN25@kubik:
; Line 658
	cmp	DWORD PTR _ak$[ebp], 0
	je	$LN24@kubik
; Line 660
	mov	eax, DWORD PTR _ak$[ebp]
	and	eax, 192				; 000000c0H
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR _aaa$57[ebp+edx], al
; Line 661
	mov	eax, DWORD PTR _ak$[ebp]
	and	eax, 48					; 00000030H
	shl	eax, 2
	mov	ecx, 1
	shl	ecx, 0
	mov	BYTE PTR _aaa$57[ebp+ecx], al
; Line 662
	mov	edx, DWORD PTR _ak$[ebp]
	and	edx, 12					; 0000000cH
	shl	edx, 4
	mov	eax, 1
	shl	eax, 1
	mov	BYTE PTR _aaa$57[ebp+eax], dl
; Line 663
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR _aaa$57[ebp+ecx]
	push	edx
	mov	eax, 1
	shl	eax, 0
	movzx	ecx, BYTE PTR _aaa$57[ebp+eax]
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	movzx	ecx, BYTE PTR _aaa$57[ebp+eax]
	push	ecx
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T36[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_2$41[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
; Line 665
	mov	edx, 1
	imul	eax, edx, 0
	movzx	ecx, BYTE PTR _aaa$57[ebp+eax]
	or	ecx, 63					; 0000003fH
	mov	edx, 1
	imul	eax, edx, 0
	mov	BYTE PTR _aaa$57[ebp+eax], cl
; Line 666
	mov	ecx, 1
	shl	ecx, 0
	movzx	edx, BYTE PTR _aaa$57[ebp+ecx]
	or	edx, 63					; 0000003fH
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _aaa$57[ebp+eax], dl
; Line 667
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR _aaa$57[ebp+ecx]
	or	edx, 63					; 0000003fH
	mov	eax, 1
	shl	eax, 1
	mov	BYTE PTR _aaa$57[ebp+eax], dl
; Line 668
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR _aaa$57[ebp+ecx]
	push	edx
	mov	eax, 1
	shl	eax, 0
	movzx	ecx, BYTE PTR _aaa$57[ebp+eax]
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	movzx	ecx, BYTE PTR _aaa$57[ebp+eax]
	push	ecx
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T33[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_3$26[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
; Line 670
	lea	edx, DWORD PTR _kb1$[ebp]
	push	edx
	lea	eax, DWORD PTR _farb_2$41[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 671
	lea	ecx, DWORD PTR _kb2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _farb_3$26[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 672
	lea	eax, DWORD PTR _kb3$[ebp]
	push	eax
	lea	ecx, DWORD PTR _farb_2$41[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 673
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	ecx, DWORD PTR _farb_3$26[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _farb_2$41[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
$LN24@kubik:
; Line 675
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::Matrix::Reset
; Line 676
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	imul	edx, DWORD PTR _xend$[ebp], 0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 678
	jmp	$LN27@kubik
$LN26@kubik:
; Line 679
	push	0
	imul	eax, DWORD PTR _yend$[ebp], -22
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR _xend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 680
	jmp	$LN30@kubik
$LN29@kubik:
; Line 681
	push	0
	mov	ecx, DWORD PTR _yend$[ebp]
	shl	ecx, 1
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _xend$[ebp]
	shl	edx, 1
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 683
	cmp	DWORD PTR ?etap@@3HA, 3			; etap
	jl	$LN20@kubik
; Line 684
	mov	DWORD PTR _i$52[ebp], 0
	jmp	SHORT $LN22@kubik
$LN21@kubik:
	mov	eax, DWORD PTR _i$52[ebp]
	add	eax, 1
	mov	DWORD PTR _i$52[ebp], eax
$LN22@kubik:
	cmp	DWORD PTR _i$52[ebp], 4
	jge	$LN20@kubik
; Line 685
	mov	DWORD PTR _j$51[ebp], 0
	jmp	SHORT $LN19@kubik
$LN18@kubik:
	mov	ecx, DWORD PTR _j$51[ebp]
	add	ecx, 1
	mov	DWORD PTR _j$51[ebp], ecx
$LN19@kubik:
	cmp	DWORD PTR _j$51[ebp], 4
	jge	$LN17@kubik
; Line 686
	mov	edx, DWORD PTR _j$51[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _i$52[ebp]
	mov	ecx, DWORD PTR ?fig_next@@3PAY03HA[edx+eax*4]
	mov	DWORD PTR _ak$[ebp], ecx
; Line 687
	lea	edx, DWORD PTR _myMatrix$[ebp]
	push	edx
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 688
	lea	eax, DWORD PTR _myMatrix$[ebp]
	push	eax
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 689
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ; Gdiplus::GraphicsPath::Transform
; Line 692
	cmp	DWORD PTR _ak$[ebp], 0
	je	$LN16@kubik
; Line 694
	mov	edx, DWORD PTR _ak$[ebp]
	and	edx, 192				; 000000c0H
	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _aaa$56[ebp+ecx], dl
; Line 695
	mov	edx, DWORD PTR _ak$[ebp]
	and	edx, 48					; 00000030H
	shl	edx, 2
	mov	eax, 1
	shl	eax, 0
	mov	BYTE PTR _aaa$56[ebp+eax], dl
; Line 696
	mov	ecx, DWORD PTR _ak$[ebp]
	and	ecx, 12					; 0000000cH
	shl	ecx, 4
	mov	edx, 1
	shl	edx, 1
	mov	BYTE PTR _aaa$56[ebp+edx], cl
; Line 697
	mov	eax, 1
	shl	eax, 1
	movzx	ecx, BYTE PTR _aaa$56[ebp+eax]
	push	ecx
	mov	edx, 1
	shl	edx, 0
	movzx	eax, BYTE PTR _aaa$56[ebp+edx]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	movzx	eax, BYTE PTR _aaa$56[ebp+edx]
	push	eax
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T17[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_2$40[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 699
	mov	ecx, 1
	imul	edx, ecx, 0
	movzx	eax, BYTE PTR _aaa$56[ebp+edx]
	or	eax, 63					; 0000003fH
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR _aaa$56[ebp+edx], al
; Line 700
	mov	eax, 1
	shl	eax, 0
	movzx	ecx, BYTE PTR _aaa$56[ebp+eax]
	or	ecx, 63					; 0000003fH
	mov	edx, 1
	shl	edx, 0
	mov	BYTE PTR _aaa$56[ebp+edx], cl
; Line 701
	mov	eax, 1
	shl	eax, 1
	movzx	ecx, BYTE PTR _aaa$56[ebp+eax]
	or	ecx, 63					; 0000003fH
	mov	edx, 1
	shl	edx, 1
	mov	BYTE PTR _aaa$56[ebp+edx], cl
; Line 702
	mov	eax, 1
	shl	eax, 1
	movzx	ecx, BYTE PTR _aaa$56[ebp+eax]
	push	ecx
	mov	edx, 1
	shl	edx, 0
	movzx	eax, BYTE PTR _aaa$56[ebp+edx]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	movzx	eax, BYTE PTR _aaa$56[ebp+edx]
	push	eax
	push	255					; 000000ffH
	lea	ecx, DWORD PTR $T31[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _farb_3$24[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
; Line 704
	lea	ecx, DWORD PTR _kb1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _farb_2$40[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 705
	lea	eax, DWORD PTR _kb2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _farb_3$24[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 706
	lea	edx, DWORD PTR _kb3$[ebp]
	push	edx
	lea	eax, DWORD PTR _farb_2$40[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 707
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	ecx, DWORD PTR _farb_3$24[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _farb_2$40[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
$LN16@kubik:
; Line 709
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ ; Gdiplus::Matrix::Reset
; Line 710
	push	0
	cvtsi2ss xmm0, DWORD PTR _yend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	imul	ecx, DWORD PTR _xend$[ebp], 0
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 712
	jmp	$LN18@kubik
$LN17@kubik:
; Line 713
	push	0
	imul	edx, DWORD PTR _yend$[ebp], -4
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2ss xmm0, DWORD PTR _xend$[ebp]
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ; Gdiplus::Matrix::Translate
; Line 714
	jmp	$LN21@kubik
$LN20@kubik:
; Line 716
	mov	eax, DWORD PTR ?etap@@3HA		; etap
	mov	DWORD PTR tv1120[ebp], eax
	cmp	DWORD PTR tv1120[ebp], 4
	ja	$LN1@kubik
	mov	ecx, DWORD PTR tv1120[ebp]
	jmp	DWORD PTR $LN76@kubik[ecx*4]
$LN13@kubik:
; Line 718
	push	0
	lea	ecx, DWORD PTR _kb7$47[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	push	0
	lea	ecx, DWORD PTR _kb6$48[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
; Line 719
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	120					; 00000078H
	lea	ecx, DWORD PTR $T23[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _wite$37[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
; Line 720
	push	255					; 000000ffH
	push	231					; 000000e7H
	push	188					; 000000bcH
	push	150					; 00000096H
	lea	ecx, DWORD PTR $T27[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _blue$39[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
; Line 722
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb6$48[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 723
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb6$48[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 724
	cmp	DWORD PTR ?typ_gry@@3HA, 0		; typ_gry
	jne	SHORT $LN12@kubik
; Line 725
	lea	ecx, DWORD PTR _kb6$48[ebp]
	push	ecx
	lea	edx, DWORD PTR _wite$37[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 726
	jmp	SHORT $LN11@kubik
$LN12@kubik:
; Line 727
	lea	eax, DWORD PTR _kb6$48[ebp]
	push	eax
	lea	ecx, DWORD PTR _blue$39[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
$LN11@kubik:
; Line 729
	lea	edx, DWORD PTR _pen_txt$[ebp]
	push	edx
	imul	eax, DWORD PTR _yend$[ebp], 10
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400a666666666666
	cvttsd2si ecx, xmm0
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	push	-1
	push	OFFSET $SG77824
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 731
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 732
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 733
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 734
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40239eb851eb851f
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4009c28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 736
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb7$47[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 737
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb7$47[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 738
	cmp	DWORD PTR ?typ_gry@@3HA, 1		; typ_gry
	jne	SHORT $LN10@kubik
; Line 739
	lea	ecx, DWORD PTR _kb7$47[ebp]
	push	ecx
	lea	edx, DWORD PTR _wite$37[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 740
	jmp	SHORT $LN9@kubik
$LN10@kubik:
; Line 741
	lea	eax, DWORD PTR _kb7$47[ebp]
	push	eax
	lea	ecx, DWORD PTR _blue$39[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
$LN9@kubik:
; Line 743
	lea	edx, DWORD PTR _pen_txt$[ebp]
	push	edx
	imul	eax, DWORD PTR _yend$[ebp], 12
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400e666666666666
	cvttsd2si ecx, xmm0
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	push	-1
	push	OFFSET $SG77856
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 745
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 746
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 747
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 748
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40228f5c28f5c28f
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@400dc28f5c28f5c3
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 749
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	lea	ecx, DWORD PTR _blue$39[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 17		; 00000011H
	lea	ecx, DWORD PTR _wite$37[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	ecx, DWORD PTR _kb6$48[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _kb7$47[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	jmp	$LN14@kubik
; Line 752
	jmp	$LN14@kubik
$LN7@kubik:
; Line 755
	push	0
	lea	ecx, DWORD PTR _kb5$46[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	push	0
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	push	0
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
; Line 756
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	120					; 00000078H
	lea	ecx, DWORD PTR $T35[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _wite$22[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
; Line 757
	push	255					; 000000ffH
	push	231					; 000000e7H
	push	188					; 000000bcH
	push	150					; 00000096H
	lea	ecx, DWORD PTR $T32[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _blue$38[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
; Line 759
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb5$46[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 760
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb5$46[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 761
	lea	ecx, DWORD PTR _kb5$46[ebp]
	push	ecx
	lea	edx, DWORD PTR _wite$22[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 763
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 11
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013cccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	push	OFFSET $SG77895
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 765
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 766
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 767
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 768
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 770
	imul	eax, DWORD PTR _yend$[ebp], 13
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si ecx, xmm0
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 14
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 771
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a99999999999a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si edx, xmm0
	push	edx
	imul	eax, DWORD PTR _yend$[ebp], 13
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 772
	imul	edx, DWORD PTR _yend$[ebp], 13
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a99999999999a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 773
	imul	eax, DWORD PTR _yend$[ebp], 14
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 13
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 774
	lea	ecx, DWORD PTR _kb6$50[ebp]
	push	ecx
	lea	edx, DWORD PTR _blue$38[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 776
	imul	eax, DWORD PTR _yend$[ebp], 13
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si ecx, xmm0
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 14
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 777
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a99999999999a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 13
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 778
	imul	ecx, DWORD PTR _yend$[ebp], 13
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a99999999999a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 779
	imul	eax, DWORD PTR _yend$[ebp], 14
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	imul	edx, DWORD PTR _yend$[ebp], 13
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 781
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40224ccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 782
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023b33333333333
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 783
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023b33333333333
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 784
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40224ccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 785
	lea	eax, DWORD PTR _kb7$49[ebp]
	push	eax
	lea	ecx, DWORD PTR _blue$38[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 787
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40224ccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 788
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023b33333333333
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017333333333333
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 789
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023b33333333333
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 790
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40224ccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401a000000000000
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40244ccccccccccd
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401ccccccccccccd
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 791
	mov	BYTE PTR __$EHRec$[ebp+8], 23		; 00000017H
	lea	ecx, DWORD PTR _blue$38[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	lea	ecx, DWORD PTR _wite$22[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	lea	ecx, DWORD PTR _kb7$49[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 20		; 00000014H
	lea	ecx, DWORD PTR _kb6$50[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _kb5$46[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	jmp	$LN14@kubik
$LN6@kubik:
; Line 794
	mov	ecx, DWORD PTR ?ready@@3HA		; ready
	sub	ecx, 1
	mov	DWORD PTR ?ready@@3HA, ecx		; ready
; Line 795
	je	$LN5@kubik
; Line 796
	push	0
	lea	ecx, DWORD PTR _kb7$43[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	push	0
	lea	ecx, DWORD PTR _kb6$45[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
; Line 797
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	120					; 00000078H
	lea	ecx, DWORD PTR $T30[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _wite$18[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
; Line 798
	push	255					; 000000ffH
	push	231					; 000000e7H
	push	188					; 000000bcH
	push	150					; 00000096H
	lea	ecx, DWORD PTR $T28[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _blue$20[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
; Line 800
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb6$45[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 801
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb6$45[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 802
	lea	ecx, DWORD PTR _kb6$45[ebp]
	push	ecx
	lea	edx, DWORD PTR _wite$18[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 804
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 10
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013cccccccccccd
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	push	OFFSET $SG77997
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 806
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 807
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 808
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40268a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 809
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4023d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 811
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _kb7$43[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 812
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb7$43[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 813
	lea	edx, DWORD PTR _kb7$43[ebp]
	push	edx
	lea	eax, DWORD PTR _blue$20[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 815
	mov	ecx, DWORD PTR ?ready@@3HA		; ready
	push	ecx
	push	OFFSET $SG78022
	push	18					; 00000012H
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 816
	lea	eax, DWORD PTR _pen_txt$[ebp]
	push	eax
	imul	ecx, DWORD PTR _yend$[ebp], 12
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40183d70a3d70a3d
	cvttsd2si edx, xmm0
	cvtsi2ss xmm0, edx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	eax, DWORD PTR _font$[ebp]
	push	eax
	push	-1
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 818
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 819
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 820
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402a8a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 821
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@401c47ae147ae148
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4027d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4017851eb851eb85
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 823
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	lea	ecx, DWORD PTR _blue$20[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 26		; 0000001aH
	lea	ecx, DWORD PTR _wite$18[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	lea	ecx, DWORD PTR _kb6$45[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _kb7$43[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	jmp	SHORT $LN4@kubik
$LN5@kubik:
; Line 824
	call	?setup_3@@YAXXZ				; setup_3
; Line 825
	push	0
	push	200000					; 00030d40H
	push	34948					; 00008884H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
; Line 826
	push	0
	push	1000					; 000003e8H
	push	34952					; 00008888H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetTimer@16
; Line 827
	push	0
	push	200					; 000000c8H
	push	34951					; 00008887H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
$LN4@kubik:
; Line 829
	jmp	$LN14@kubik
$LN3@kubik:
; Line 832
	cmp	DWORD PTR ?pause@@3HA, 1		; pause
	jne	$LN2@kubik
; Line 833
	push	0
	lea	ecx, DWORD PTR _kb5$44[ebp]
	call	??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ; Gdiplus::GraphicsPath::GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
; Line 834
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	240					; 000000f0H
	push	120					; 00000078H
	lea	ecx, DWORD PTR $T25[ebp]
	call	??0Color@Gdiplus@@QAE@EEEE@Z		; Gdiplus::Color::Color
	push	eax
	lea	ecx, DWORD PTR _wite$16[ebp]
	call	??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ; Gdiplus::SolidBrush::SolidBrush
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
; Line 836
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si ecx, xmm0
	push	ecx
	lea	ecx, DWORD PTR _kb5$44[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 837
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si edx, xmm0
	push	edx
	lea	ecx, DWORD PTR _kb5$44[ebp]
	call	?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ; Gdiplus::GraphicsPath::AddLine
; Line 838
	lea	eax, DWORD PTR _kb5$44[ebp]
	push	eax
	lea	ecx, DWORD PTR _wite$16[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ; Gdiplus::Graphics::FillPath
; Line 840
	lea	edx, DWORD PTR _pen_txt$[ebp]
	push	edx
	imul	eax, DWORD PTR _yend$[ebp], 11
	cvtsi2ss xmm0, eax
	push	ecx
	movss	DWORD PTR [esp], xmm0
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013cccccccccccd
	cvttsd2si ecx, xmm0
	cvtsi2ss xmm0, ecx
	push	ecx
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0PointF@Gdiplus@@QAE@MM@Z		; Gdiplus::PointF::PointF
	push	eax
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	push	-1
	push	OFFSET $SG78066
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ; Gdiplus::Graphics::DrawString
; Line 842
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 843
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si edx, xmm0
	push	edx
	lea	eax, DWORD PTR _Pen1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 844
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@40288a3d70a3d70a
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si ecx, xmm0
	push	ecx
	lea	edx, DWORD PTR _Pen1$[ebp]
	push	edx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 845
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si eax, xmm0
	push	eax
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@402075c28f5c28f6
	cvttsd2si ecx, xmm0
	push	ecx
	cvtsi2sd xmm0, DWORD PTR _yend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4025d70a3d70a3d7
	cvttsd2si edx, xmm0
	push	edx
	cvtsi2sd xmm0, DWORD PTR _xend$[ebp]
	mulsd	xmm0, QWORD PTR __real@4013147ae147ae14
	cvttsd2si eax, xmm0
	push	eax
	lea	ecx, DWORD PTR _Pen1$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ; Gdiplus::Graphics::DrawLine
; Line 846
	mov	BYTE PTR __$EHRec$[ebp+8], 29		; 0000001dH
	lea	ecx, DWORD PTR _wite$16[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR _kb5$44[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
$LN2@kubik:
$LN1@kubik:
$LN14@kubik:
; Line 853
	mov	DWORD PTR $T42[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	ecx, DWORD PTR _farb_1$[ebp]
	call	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	call	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	lea	ecx, DWORD PTR _khrest2$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR _khrest1$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _kb3$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _kb2$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _kb1$[ebp]
	call	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _Pen1$[ebp]
	call	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _font$[ebp]
	call	??1Font@Gdiplus@@QAE@XZ			; Gdiplus::Font::~Font
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _fontFamily$[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
	mov	eax, DWORD PTR $T42[ebp]
; Line 854
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN76@kubik:
	DD	$LN13@kubik
	DD	$LN1@kubik
	DD	$LN7@kubik
	DD	$LN6@kubik
	DD	$LN3@kubik
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$0:
	lea	ecx, DWORD PTR _graphics$[ebp]
	jmp	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$1:
	lea	ecx, DWORD PTR _fontFamily$[ebp]
	jmp	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$2:
	lea	ecx, DWORD PTR _font$[ebp]
	jmp	??1Font@Gdiplus@@QAE@XZ			; Gdiplus::Font::~Font
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$3:
	lea	ecx, DWORD PTR _pen_txt$[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$4:
	lea	ecx, DWORD PTR _Pen1$[ebp]
	jmp	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$5:
	lea	ecx, DWORD PTR _kb1$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$6:
	lea	ecx, DWORD PTR _kb2$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$7:
	lea	ecx, DWORD PTR _kb3$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$8:
	lea	ecx, DWORD PTR _khrest1$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$9:
	lea	ecx, DWORD PTR _khrest2$[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$10:
	lea	ecx, DWORD PTR _myMatrix$[ebp]
	jmp	??1Matrix@Gdiplus@@QAE@XZ		; Gdiplus::Matrix::~Matrix
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$11:
	lea	ecx, DWORD PTR _farb_1$[ebp]
	jmp	??1Pen@Gdiplus@@QAE@XZ			; Gdiplus::Pen::~Pen
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$12:
	lea	ecx, DWORD PTR _farb_2$41[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$13:
	lea	ecx, DWORD PTR _farb_3$26[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$14:
	lea	ecx, DWORD PTR _farb_2$40[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$15:
	lea	ecx, DWORD PTR _farb_3$24[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$16:
	lea	ecx, DWORD PTR _kb7$47[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$17:
	lea	ecx, DWORD PTR _kb6$48[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$18:
	lea	ecx, DWORD PTR _wite$37[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$19:
	lea	ecx, DWORD PTR _blue$39[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$20:
	lea	ecx, DWORD PTR _kb5$46[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$21:
	lea	ecx, DWORD PTR _kb6$50[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$22:
	lea	ecx, DWORD PTR _kb7$49[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$23:
	lea	ecx, DWORD PTR _wite$22[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$24:
	lea	ecx, DWORD PTR _blue$38[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$25:
	lea	ecx, DWORD PTR _kb7$43[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$26:
	lea	ecx, DWORD PTR _kb6$45[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$27:
	lea	ecx, DWORD PTR _wite$18[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$28:
	lea	ecx, DWORD PTR _blue$20[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$29:
	lea	ecx, DWORD PTR _kb5$44[ebp]
	jmp	??1GraphicsPath@Gdiplus@@QAE@XZ		; Gdiplus::GraphicsPath::~GraphicsPath
__unwindfunclet$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z$30:
	lea	ecx, DWORD PTR _wite$16[ebp]
	jmp	??1SolidBrush@Gdiplus@@UAE@XZ
__ehhandler$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-568]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z ENDP		; kubik
; Function compile flags: /Odtp
_TEXT	SEGMENT
_num$ = -16						; size = 4
_size$ = -12						; size = 4
_j$1 = -8						; size = 4
_pImageCodecInfo$ = -4					; size = 4
_format$ = 8						; size = 4
_pClsid$ = 12						; size = 4
?GetEncoderClsid@@YAHPB_WPAU_GUID@@@Z PROC		; GetEncoderClsid
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 858
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 859
	mov	DWORD PTR _num$[ebp], 0
; Line 860
	mov	DWORD PTR _size$[ebp], 0
; Line 861
	mov	DWORD PTR _pImageCodecInfo$[ebp], 0
; Line 862
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _num$[ebp]
	push	ecx
	call	?GetImageEncodersSize@Gdiplus@@YA?AW4Status@1@PAI0@Z ; Gdiplus::GetImageEncodersSize
	add	esp, 8
; Line 863
	cmp	DWORD PTR _size$[ebp], 0
	jne	SHORT $LN6@GetEncoder
; Line 864
	or	eax, -1
	jmp	$LN7@GetEncoder
$LN6@GetEncoder:
; Line 865
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pImageCodecInfo$[ebp], eax
; Line 866
	cmp	DWORD PTR _pImageCodecInfo$[ebp], 0
	jne	SHORT $LN5@GetEncoder
; Line 867
	or	eax, -1
	jmp	$LN7@GetEncoder
$LN5@GetEncoder:
; Line 868
	mov	eax, DWORD PTR _pImageCodecInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _num$[ebp]
	push	edx
	call	?GetImageEncoders@Gdiplus@@YA?AW4Status@1@IIPAVImageCodecInfo@1@@Z ; Gdiplus::GetImageEncoders
	add	esp, 12					; 0000000cH
; Line 869
	mov	DWORD PTR _j$1[ebp], 0
	jmp	SHORT $LN4@GetEncoder
$LN3@GetEncoder:
	mov	eax, DWORD PTR _j$1[ebp]
	add	eax, 1
	mov	DWORD PTR _j$1[ebp], eax
$LN4@GetEncoder:
	mov	ecx, DWORD PTR _j$1[ebp]
	cmp	ecx, DWORD PTR _num$[ebp]
	jae	SHORT $LN2@GetEncoder
; Line 871
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	imul	eax, DWORD PTR _j$1[ebp], 76
	mov	ecx, DWORD PTR _pImageCodecInfo$[ebp]
	mov	edx, DWORD PTR [ecx+eax+48]
	push	edx
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@GetEncoder
; Line 873
	imul	eax, DWORD PTR _j$1[ebp], 76
	add	eax, DWORD PTR _pImageCodecInfo$[ebp]
	mov	ecx, DWORD PTR _pClsid$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
; Line 874
	mov	ecx, DWORD PTR _pImageCodecInfo$[ebp]
	push	ecx
	call	_free
	add	esp, 4
; Line 875
	mov	eax, DWORD PTR _j$1[ebp]
	jmp	SHORT $LN7@GetEncoder
$LN1@GetEncoder:
; Line 877
	jmp	SHORT $LN3@GetEncoder
$LN2@GetEncoder:
; Line 878
	mov	edx, DWORD PTR _pImageCodecInfo$[ebp]
	push	edx
	call	_free
	add	esp, 4
; Line 879
	or	eax, -1
$LN7@GetEncoder:
; Line 880
	mov	esp, ebp
	pop	ebp
	ret	0
?GetEncoderClsid@@YAHPB_WPAU_GUID@@@Z ENDP		; GetEncoderClsid
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_bmp$ = -136						; size = 16
_quality$2 = -120					; size = 4
$T3 = -116						; size = 4
_graphics$ = -112					; size = 8
_clsid$4 = -104						; size = 16
_encoderParameters$5 = -88				; size = 32
_wbuff$6 = -56						; size = 40
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hdc$ = 8						; size = 4
_ak$ = 12						; size = 4
_xend$ = 16						; size = 4
_yend$ = 20						; size = 4
_hWnd$ = 24						; size = 4
_save$ = 28						; size = 4
?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z PROC	; DRAW_TEST__
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 884
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 885
	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z	; Gdiplus::Graphics::Graphics
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 886
	lea	ecx, DWORD PTR _graphics$[ebp]
	push	ecx
	mov	edx, DWORD PTR _yend$[ebp]
	push	edx
	mov	eax, DWORD PTR _xend$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bmp$[ebp]
	call	??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z ; Gdiplus::Bitmap::Bitmap
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 888
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _yend$[ebp]
	push	edx
	mov	eax, DWORD PTR _xend$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ak$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bmp$[ebp]
	push	edx
	call	?DRAW_TEST@@YAHPAVBitmap@Gdiplus@@HHHPAUHWND__@@@Z ; DRAW_TEST
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ak$[ebp], eax
; Line 890
	push	0
	push	0
	lea	eax, DWORD PTR _bmp$[ebp]
	push	eax
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HH@Z ; Gdiplus::Graphics::DrawImage
; Line 893
	cmp	DWORD PTR _save$[ebp], 0
	je	$LN1@DRAW_TEST_
; Line 894
	mov	DWORD PTR _save$[ebp], 0
; Line 895
	mov	ecx, DWORD PTR ?im@?1??DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z@4HA
	add	ecx, 1
	mov	DWORD PTR ?im@?1??DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z@4HA, ecx
; Line 900
	mov	edx, DWORD PTR ?im@?1??DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z@4HA
	push	edx
	mov	eax, DWORD PTR ?hc@@3HA			; hc
	push	eax
	push	OFFSET $SG78115
	lea	ecx, DWORD PTR _wbuff$6[ebp]
	push	ecx
	call	?swprintf@@YAHPA_WPB_WZZ		; swprintf
	add	esp, 16					; 00000010H
; Line 904
	lea	edx, DWORD PTR _clsid$4[ebp]
	push	edx
	push	OFFSET $SG78118
	call	?GetEncoderClsid@@YAHPB_WPAU_GUID@@@Z	; GetEncoderClsid
	add	esp, 8
; Line 905
	mov	DWORD PTR _encoderParameters$5[ebp], 1
; Line 906
	mov	eax, 28					; 0000001cH
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _encoderParameters$5[ebp+ecx+4]
	mov	eax, DWORD PTR _EncoderQuality
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _EncoderQuality+4
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _EncoderQuality+8
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _EncoderQuality+12
	mov	DWORD PTR [edx+12], ecx
; Line 907
	mov	edx, 28					; 0000001cH
	imul	eax, edx, 0
	mov	DWORD PTR _encoderParameters$5[ebp+eax+24], 4
; Line 908
	mov	ecx, 28					; 0000001cH
	imul	edx, ecx, 0
	mov	DWORD PTR _encoderParameters$5[ebp+edx+20], 1
; Line 910
	mov	DWORD PTR _quality$2[ebp], 99		; 00000063H
; Line 911
	mov	eax, 28					; 0000001cH
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _quality$2[ebp]
	mov	DWORD PTR _encoderParameters$5[ebp+ecx+28], edx
; Line 912
	lea	eax, DWORD PTR _encoderParameters$5[ebp]
	push	eax
	lea	ecx, DWORD PTR _clsid$4[ebp]
	push	ecx
	lea	edx, DWORD PTR _wbuff$6[ebp]
	push	edx
	lea	ecx, DWORD PTR _bmp$[ebp]
	call	?Save@Image@Gdiplus@@QAE?AW4Status@2@PB_WPBU_GUID@@PBVEncoderParameters@2@@Z ; Gdiplus::Image::Save
$LN1@DRAW_TEST_:
; Line 914
	mov	eax, DWORD PTR _ak$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _bmp$[ebp]
	call	??1Bitmap@Gdiplus@@UAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _graphics$[ebp]
	call	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
	mov	eax, DWORD PTR $T3[ebp]
; Line 915
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z$0:
	lea	ecx, DWORD PTR _graphics$[ebp]
	jmp	??1Graphics@Gdiplus@@QAE@XZ		; Gdiplus::Graphics::~Graphics
__unwindfunclet$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z$1:
	lea	ecx, DWORD PTR _bmp$[ebp]
	jmp	??1Bitmap@Gdiplus@@UAE@XZ
__ehhandler$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-128]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z ENDP	; DRAW_TEST__
; Function compile flags: /Odtp
_TEXT	SEGMENT
_bmp$ = 8						; size = 4
_ak$ = 12						; size = 4
_xend$ = 16						; size = 4
_yend$ = 20						; size = 4
_hWnd$ = 24						; size = 4
?DRAW_TEST@@YAHPAVBitmap@Gdiplus@@HHHPAUHWND__@@@Z PROC	; DRAW_TEST
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 919
	push	ebp
	mov	ebp, esp
	push	esi
; Line 920
	mov	eax, DWORD PTR _xend$[ebp]
	cdq
	mov	ecx, 19					; 00000013H
	idiv	ecx
	mov	ecx, eax
	mov	eax, DWORD PTR _yend$[ebp]
	cdq
	mov	esi, 24					; 00000018H
	idiv	esi
	cmp	ecx, eax
	jle	SHORT $LN4@DRAW_TEST
; Line 921
	mov	eax, DWORD PTR _yend$[ebp]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _yend$[ebp], eax
; Line 922
	mov	edx, DWORD PTR _yend$[ebp]
	mov	DWORD PTR _xend$[ebp], edx
; Line 923
	jmp	SHORT $LN3@DRAW_TEST
$LN4@DRAW_TEST:
; Line 924
	mov	eax, DWORD PTR _xend$[ebp]
	cdq
	mov	ecx, 19					; 00000013H
	idiv	ecx
	mov	DWORD PTR _xend$[ebp], eax
; Line 925
	mov	edx, DWORD PTR _xend$[ebp]
	mov	DWORD PTR _yend$[ebp], edx
$LN3@DRAW_TEST:
; Line 927
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN2@DRAW_TEST
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN2@DRAW_TEST
; Line 928
	mov	eax, DWORD PTR _xend$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xend$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bmp$[ebp]
	push	edx
	call	?kubik@@YAHPAVBitmap@Gdiplus@@HHH@Z	; kubik
	add	esp, 16					; 00000010H
; Line 929
	jmp	SHORT $LN1@DRAW_TEST
$LN2@DRAW_TEST:
; Line 930
	mov	eax, DWORD PTR _xend$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xend$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bmp$[ebp]
	push	edx
	call	?shmarkli@@YAHPAVBitmap@Gdiplus@@HHH@Z	; shmarkli
	add	esp, 16					; 00000010H
$LN1@DRAW_TEST:
; Line 931
	xor	eax, eax
; Line 932
	pop	esi
	pop	ebp
	ret	0
?DRAW_TEST@@YAHPAVBitmap@Gdiplus@@HHHPAUHWND__@@@Z ENDP	; DRAW_TEST
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = -4						; size = 4
_hDlg$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?About@@YGHPAUHWND__@@IIJ@Z PROC			; About
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 485
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 487
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN4@About
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN3@About
	jmp	SHORT $LN5@About
$LN4@About:
; Line 490
	mov	eax, 1
	jmp	SHORT $LN7@About
$LN3@About:
; Line 493
	mov	ecx, DWORD PTR _wParam$[ebp]
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	cmp	edx, 1
	je	SHORT $LN1@About
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 2
	jne	SHORT $LN5@About
$LN1@About:
; Line 495
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	push	eax
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndDialog@8
; Line 496
	mov	eax, 1
	jmp	SHORT $LN7@About
$LN5@About:
; Line 500
	xor	eax, eax
$LN7@About:
; Line 501
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?About@@YGHPAUHWND__@@IIJ@Z ENDP			; About
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wmEvent$ = -108					; size = 4
_hdc$ = -104						; size = 4
_wmId$ = -100						; size = 4
tv216 = -96						; size = 4
tv294 = -92						; size = 4
tv76 = -88						; size = 4
_ps$ = -84						; size = 64
_rt$1 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProc@@YGJPAUHWND__@@IIJ@Z PROC			; WndProc
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 316
	cmp	DWORD PTR ?f_sop_ver@@3HA, 1		; f_sop_ver
	jne	SHORT $LN66@WndProc
; Line 317
	push	0
	push	25					; 00000019H
	push	34949					; 00008885H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
	jmp	SHORT $LN65@WndProc
$LN66@WndProc:
; Line 318
	cmp	DWORD PTR ?f_sop@@3HA, 1		; f_sop
	jne	SHORT $LN65@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN65@WndProc
; Line 319
	push	0
	push	0
	push	34949					; 00008885H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
$LN65@WndProc:
; Line 320
	cmp	DWORD PTR ?ready@@3HA, 4		; ready
	jne	SHORT $LN63@WndProc
; Line 321
	push	0
	push	1000					; 000003e8H
	push	34948					; 00008884H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetTimer@16
$LN63@WndProc:
; Line 326
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 273		; 00000111H
	ja	SHORT $LN71@WndProc
	cmp	DWORD PTR tv76[ebp], 273		; 00000111H
	je	$LN9@WndProc
	cmp	DWORD PTR tv76[ebp], 256		; 00000100H
	ja	SHORT $LN72@WndProc
	cmp	DWORD PTR tv76[ebp], 256		; 00000100H
	je	$LN41@WndProc
	cmp	DWORD PTR tv76[ebp], 2
	je	$LN2@WndProc
	cmp	DWORD PTR tv76[ebp], 15			; 0000000fH
	je	$LN3@WndProc
	jmp	$LN1@WndProc
$LN72@WndProc:
	cmp	DWORD PTR tv76[ebp], 257		; 00000101H
	je	$LN43@WndProc
	jmp	$LN1@WndProc
$LN71@WndProc:
	cmp	DWORD PTR tv76[ebp], 275		; 00000113H
	je	SHORT $LN60@WndProc
	cmp	DWORD PTR tv76[ebp], 32769		; 00008001H
	je	$LN48@WndProc
	cmp	DWORD PTR tv76[ebp], 32770		; 00008002H
	je	$LN45@WndProc
	jmp	$LN1@WndProc
$LN60@WndProc:
; Line 328
	cmp	DWORD PTR _wParam$[ebp], 34952		; 00008888H
	jne	SHORT $LN59@WndProc
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN59@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN59@WndProc
; Line 329
	push	0
	push	0
	push	32770					; 00008002H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 330
	jmp	$LN58@WndProc
$LN59@WndProc:
; Line 331
	cmp	DWORD PTR _wParam$[ebp], 34951		; 00008887H
	jne	$LN57@WndProc
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	$LN57@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	$LN57@WndProc
; Line 332
	cmp	DWORD PTR ?takt@@3KA, 40		; takt, 00000028H
	jbe	SHORT $LN56@WndProc
; Line 333
	mov	edx, DWORD PTR ?takt@@3KA		; takt
	sub	edx, 1
	mov	DWORD PTR ?takt@@3KA, edx		; takt
; Line 334
	mov	eax, DWORD PTR ?prsc@@3KA		; prsc
	add	eax, 1
	mov	DWORD PTR ?prsc@@3KA, eax		; prsc
; Line 335
	push	0
	mov	ecx, DWORD PTR ?prsc@@3KA		; prsc
	push	ecx
	push	34951					; 00008887H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetTimer@16
; Line 337
	jmp	SHORT $LN55@WndProc
$LN56@WndProc:
; Line 338
	mov	DWORD PTR ?takt@@3KA, 1000		; takt, 000003e8H
; Line 339
	mov	DWORD PTR ?prsc@@3KA, 200		; prsc, 000000c8H
; Line 340
	push	0
	mov	eax, DWORD PTR ?takt@@3KA		; takt
	push	eax
	push	34952					; 00008888H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
; Line 341
	push	0
	mov	edx, DWORD PTR ?prsc@@3KA		; prsc
	push	edx
	push	34951					; 00008887H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
$LN55@WndProc:
; Line 343
	jmp	SHORT $LN58@WndProc
$LN57@WndProc:
; Line 344
	cmp	DWORD PTR _wParam$[ebp], 34950		; 00008886H
	jne	SHORT $LN58@WndProc
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN58@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN58@WndProc
; Line 345
	push	0
	push	0
	push	32769					; 00008001H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
$LN58@WndProc:
; Line 347
	cmp	DWORD PTR _wParam$[ebp], 34949		; 00008885H
	jne	SHORT $LN52@WndProc
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN51@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	je	SHORT $LN52@WndProc
$LN51@WndProc:
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN52@WndProc
	cmp	DWORD PTR ?ready@@3HA, 0		; ready
	jne	SHORT $LN52@WndProc
; Line 348
	push	0
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 349
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
; Line 350
	jmp	SHORT $LN50@WndProc
$LN52@WndProc:
; Line 351
	cmp	DWORD PTR _wParam$[ebp], 34948		; 00008884H
	jne	SHORT $LN50@WndProc
	cmp	DWORD PTR ?etap@@3HA, 3			; etap
	jne	SHORT $LN50@WndProc
; Line 352
	push	0
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 353
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__UpdateWindow@4
$LN50@WndProc:
; Line 355
	xor	eax, eax
	jmp	$LN67@WndProc
$LN48@WndProc:
; Line 358
	cmp	DWORD PTR ?fl_s@@3HA, 0			; fl_s
	jne	SHORT $LN47@WndProc
; Line 359
	push	0
	push	200000					; 00030d40H
	push	34950					; 00008886H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
; Line 360
	push	0
	mov	ecx, DWORD PTR ?takt@@3KA		; takt
	push	ecx
	push	34952					; 00008888H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetTimer@16
; Line 361
	xor	eax, eax
	jmp	$LN67@WndProc
$LN47@WndProc:
; Line 363
	push	0
	push	0
	push	34950					; 00008886H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
; Line 364
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN46@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN46@WndProc
; Line 365
	push	0
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
$LN46@WndProc:
; Line 366
	push	0
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 367
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
; Line 368
	xor	eax, eax
	jmp	$LN67@WndProc
$LN45@WndProc:
; Line 371
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN44@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN44@WndProc
; Line 372
	push	0
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
$LN44@WndProc:
; Line 374
	push	0
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 375
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
; Line 376
	xor	eax, eax
	jmp	$LN67@WndProc
$LN43@WndProc:
; Line 379
	cmp	DWORD PTR _wParam$[ebp], 44		; 0000002cH
	jne	SHORT $LN42@WndProc
; Line 380
	mov	DWORD PTR ?save@?8??WndProc@@YGJPAUHWND__@@IIJ@Z@4HA, 1
; Line 381
	push	0
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 382
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__UpdateWindow@4
$LN42@WndProc:
; Line 384
	xor	eax, eax
	jmp	$LN67@WndProc
$LN41@WndProc:
; Line 387
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN40@WndProc
; Line 388
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
; Line 389
	xor	eax, eax
	jmp	$LN67@WndProc
$LN40@WndProc:
; Line 391
	cmp	DWORD PTR ?etap@@3HA, 3			; etap
	jne	SHORT $LN39@WndProc
; Line 392
	xor	eax, eax
	jmp	$LN67@WndProc
$LN39@WndProc:
; Line 393
	cmp	DWORD PTR _wParam$[ebp], 13		; 0000000dH
	jne	SHORT $LN38@WndProc
; Line 394
	cmp	DWORD PTR ?etap@@3HA, 0			; etap
	jne	SHORT $LN37@WndProc
; Line 395
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?setup_0@@YAXH@Z			; setup_0
	add	esp, 4
; Line 396
	mov	edx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	edx
	call	?setup_1@@YAXH@Z			; setup_1
	add	esp, 4
	jmp	SHORT $LN38@WndProc
$LN37@WndProc:
; Line 397
	cmp	DWORD PTR ?etap@@3HA, 2			; etap
	jne	SHORT $LN38@WndProc
; Line 398
	push	5
	call	?setup_2@@YAXH@Z			; setup_2
	add	esp, 4
; Line 399
	push	0
	mov	eax, DWORD PTR ?takt@@3KA		; takt
	push	eax
	push	34952					; 00008888H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
; Line 400
	push	0
	mov	edx, DWORD PTR ?prsc@@3KA		; prsc
	push	edx
	push	34951					; 00008887H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
$LN38@WndProc:
; Line 403
	cmp	DWORD PTR _wParam$[ebp], 19		; 00000013H
	je	SHORT $LN33@WndProc
	cmp	DWORD PTR _wParam$[ebp], 33		; 00000021H
	je	SHORT $LN33@WndProc
	cmp	DWORD PTR _wParam$[ebp], 34		; 00000022H
	jne	SHORT $LN34@WndProc
$LN33@WndProc:
; Line 404
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN34@WndProc
; Line 405
	cmp	DWORD PTR ?pause@@3HA, 1		; pause
	jne	SHORT $LN69@WndProc
	mov	DWORD PTR tv216[ebp], 0
	jmp	SHORT $LN70@WndProc
$LN69@WndProc:
	mov	DWORD PTR tv216[ebp], 1
$LN70@WndProc:
	mov	ecx, DWORD PTR tv216[ebp]
	mov	DWORD PTR ?pause@@3HA, ecx		; pause
; Line 406
	push	0
	mov	edx, DWORD PTR ?takt@@3KA		; takt
	push	edx
	push	34952					; 00008888H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
$LN34@WndProc:
; Line 409
	cmp	DWORD PTR _wParam$[ebp], 40		; 00000028H
	jne	SHORT $LN31@WndProc
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN31@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN31@WndProc
; Line 410
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN30@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN30@WndProc
	cmp	DWORD PTR ?fl_s@@3HA, 0			; fl_s
	jne	SHORT $LN30@WndProc
; Line 411
	push	3
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
; Line 412
	push	0
	push	0
	push	32769					; 00008001H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SendMessageW@16
	jmp	SHORT $LN31@WndProc
$LN30@WndProc:
; Line 413
	cmp	DWORD PTR ?etap@@3HA, 2			; etap
	jne	SHORT $LN28@WndProc
; Line 414
	push	3
	call	?setup_2@@YAXH@Z			; setup_2
	add	esp, 4
	jmp	SHORT $LN31@WndProc
$LN28@WndProc:
; Line 415
	cmp	DWORD PTR ?etap@@3HA, 0			; etap
	jne	SHORT $LN31@WndProc
; Line 416
	mov	DWORD PTR ?typ_gry@@3HA, 0		; typ_gry
$LN31@WndProc:
; Line 419
	cmp	DWORD PTR _wParam$[ebp], 37		; 00000025H
	jne	SHORT $LN25@WndProc
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN25@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN25@WndProc
	cmp	DWORD PTR ?fl_s@@3HA, 0			; fl_s
	jne	SHORT $LN25@WndProc
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN25@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN25@WndProc
; Line 420
	push	2
	mov	eax, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	eax
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
$LN25@WndProc:
; Line 422
	cmp	DWORD PTR _wParam$[ebp], 38		; 00000026H
	jne	SHORT $LN24@WndProc
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN24@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN24@WndProc
; Line 423
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN23@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN23@WndProc
	cmp	DWORD PTR ?fl_s@@3HA, 0			; fl_s
	jne	SHORT $LN23@WndProc
; Line 424
	push	1
	mov	ecx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	ecx
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
	jmp	SHORT $LN24@WndProc
$LN23@WndProc:
; Line 425
	cmp	DWORD PTR ?etap@@3HA, 2			; etap
	jne	SHORT $LN21@WndProc
; Line 426
	push	1
	call	?setup_2@@YAXH@Z			; setup_2
	add	esp, 4
	jmp	SHORT $LN24@WndProc
$LN21@WndProc:
; Line 427
	cmp	DWORD PTR ?etap@@3HA, 0			; etap
	jne	SHORT $LN24@WndProc
; Line 428
	mov	DWORD PTR ?typ_gry@@3HA, 1		; typ_gry
$LN24@WndProc:
; Line 431
	cmp	DWORD PTR _wParam$[ebp], 39		; 00000027H
	jne	SHORT $LN18@WndProc
	cmp	DWORD PTR ?etap@@3HA, 4			; etap
	jne	SHORT $LN18@WndProc
	cmp	DWORD PTR ?pause@@3HA, 0		; pause
	jne	SHORT $LN18@WndProc
	cmp	DWORD PTR ?fl_s@@3HA, 0			; fl_s
	jne	SHORT $LN18@WndProc
	cmp	DWORD PTR ?f_sop@@3HA, 0		; f_sop
	jne	SHORT $LN18@WndProc
	cmp	DWORD PTR ?f_sop_ver@@3HA, 0		; f_sop_ver
	jne	SHORT $LN18@WndProc
; Line 432
	push	4
	mov	edx, DWORD PTR ?typ_gry@@3HA		; typ_gry
	push	edx
	call	?loop@@YAHHH@Z				; loop
	add	esp, 8
$LN18@WndProc:
; Line 434
	cmp	DWORD PTR _wParam$[ebp], 72		; 00000048H
	je	SHORT $LN16@WndProc
	cmp	DWORD PTR _wParam$[ebp], 104		; 00000068H
	jne	SHORT $LN17@WndProc
$LN16@WndProc:
; Line 435
	call	?SwitchToNextFont@@YAXXZ		; SwitchToNextFont
; Line 436
	push	1
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 437
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
	jmp	SHORT $LN15@WndProc
$LN17@WndProc:
; Line 439
	cmp	DWORD PTR _wParam$[ebp], 80		; 00000050H
	je	SHORT $LN13@WndProc
	cmp	DWORD PTR _wParam$[ebp], 112		; 00000070H
	jne	SHORT $LN14@WndProc
$LN13@WndProc:
; Line 440
	push	1
	call	?ChangeFontScale@@YAX_N@Z		; ChangeFontScale
	add	esp, 4
; Line 441
	push	1
	push	0
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 442
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
	jmp	SHORT $LN15@WndProc
$LN14@WndProc:
; Line 444
	cmp	DWORD PTR _wParam$[ebp], 77		; 0000004dH
	je	SHORT $LN10@WndProc
	cmp	DWORD PTR _wParam$[ebp], 109		; 0000006dH
	jne	SHORT $LN15@WndProc
$LN10@WndProc:
; Line 445
	push	0
	call	?ChangeFontScale@@YAX_N@Z		; ChangeFontScale
	add	esp, 4
; Line 446
	push	1
	push	0
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
; Line 447
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__UpdateWindow@4
$LN15@WndProc:
; Line 449
	push	0
	push	0
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__InvalidateRect@12
; Line 450
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
; Line 451
	jmp	$LN61@WndProc
$LN9@WndProc:
; Line 453
	mov	edx, DWORD PTR _wParam$[ebp]
	and	edx, 65535				; 0000ffffH
	movzx	eax, dx
	mov	DWORD PTR _wmId$[ebp], eax
; Line 454
	mov	ecx, DWORD PTR _wParam$[ebp]
	shr	ecx, 16					; 00000010H
	and	ecx, 65535				; 0000ffffH
	movzx	edx, cx
	mov	DWORD PTR _wmEvent$[ebp], edx
; Line 455
	mov	eax, DWORD PTR _wmId$[ebp]
	mov	DWORD PTR tv294[ebp], eax
	cmp	DWORD PTR tv294[ebp], 104		; 00000068H
	je	SHORT $LN6@WndProc
	cmp	DWORD PTR tv294[ebp], 105		; 00000069H
	je	SHORT $LN5@WndProc
	jmp	SHORT $LN4@WndProc
$LN6@WndProc:
; Line 457
	push	0
	push	OFFSET ?About@@YGHPAUHWND__@@IIJ@Z	; About
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	push	103					; 00000067H
	mov	edx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	edx
	call	DWORD PTR __imp__DialogBoxParamW@20
; Line 458
	jmp	SHORT $LN7@WndProc
$LN5@WndProc:
; Line 460
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
; Line 461
	jmp	SHORT $LN7@WndProc
$LN4@WndProc:
; Line 463
	mov	ecx, DWORD PTR _lParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _wParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	$LN67@WndProc
$LN7@WndProc:
; Line 465
	jmp	$LN61@WndProc
$LN3@WndProc:
; Line 467
	lea	edx, DWORD PTR _ps$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__BeginPaint@8
	mov	DWORD PTR _hdc$[ebp], eax
; Line 469
	lea	ecx, DWORD PTR _rt$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__GetClientRect@8
; Line 470
	mov	eax, DWORD PTR ?save@?8??WndProc@@YGJPAUHWND__@@IIJ@Z@4HA
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rt$1[ebp+12]
	push	edx
	mov	eax, DWORD PTR _rt$1[ebp+8]
	push	eax
	mov	ecx, DWORD PTR ?ak@@3HA			; ak
	push	ecx
	mov	edx, DWORD PTR _hdc$[ebp]
	push	edx
	call	?DRAW_TEST__@@YAHPAUHDC__@@HHHPAUHWND__@@H@Z ; DRAW_TEST__
	add	esp, 24					; 00000018H
	mov	DWORD PTR ?ak@@3HA, eax			; ak
; Line 471
	mov	DWORD PTR ?save@?8??WndProc@@YGJPAUHWND__@@IIJ@Z@4HA, 0
; Line 472
	lea	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndPaint@8
; Line 473
	jmp	SHORT $LN61@WndProc
$LN2@WndProc:
; Line 475
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
; Line 476
	jmp	SHORT $LN61@WndProc
$LN1@WndProc:
; Line 478
	mov	edx, DWORD PTR _lParam$[ebp]
	push	edx
	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWnd$[ebp]
	push	edx
	call	DWORD PTR __imp__DefWindowProcW@16
	jmp	SHORT $LN67@WndProc
$LN61@WndProc:
; Line 480
	xor	eax, eax
$LN67@WndProc:
; Line 481
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?WndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WndProc
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wbuf$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?InitInstance@@YAHPAUHINSTANCE__@@H@Z PROC		; InitInstance
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 278
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 279
	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR ?hInst@@3PAUHINSTANCE__@@A, eax ; hInst
; Line 281
	push	0
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	0
	push	-2147483648				; 80000000H
	push	13565952				; 00cf0000H
	push	OFFSET ?szTitle@@3PA_WA			; szTitle
	push	OFFSET ?window_class_name@@3PA_WA	; window_class_name
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR ?hhhwww@@3PAUHWND__@@A, eax	; hhhwww
; Line 282
	push	2
	push	640					; 00000280H
	push	500					; 000001f4H
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
; Line 284
	push	1
	push	0
	push	7
	call	DWORD PTR __imp__GetCurrentProcess@0
	push	eax
	call	DWORD PTR __imp__SetUserObjectInformationW@16
; Line 286
	push	0
	push	1000					; 000003e8H
	push	34952					; 00008888H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
; Line 287
	push	0
	push	200					; 000000c8H
	push	34951					; 00008887H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
; Line 288
	push	0
	push	200000					; 00030d40H
	push	34950					; 00008886H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__SetTimer@16
; Line 289
	push	0
	push	200000					; 00030d40H
	push	34949					; 00008885H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__SetTimer@16
; Line 290
	push	0
	push	200000					; 00030d40H
	push	34948					; 00008884H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__SetTimer@16
; Line 293
	push	0
	push	OFFSET $SG77420
	call	?open_setup@@YAHPBDK@Z			; open_setup
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@InitInstan
; Line 294
	push	0
	push	OFFSET $SG77421
	call	?open_setup@@YAHPBDK@Z			; open_setup
	add	esp, 8
$LN3@InitInstan:
; Line 295
	push	12					; 0000000cH
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	push	OFFSET $SG77423
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@InitInstan
; Line 296
	push	OFFSET $SG77424
	push	OFFSET $SG77425
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 297
	push	OFFSET $SG77426
	push	OFFSET $SG77427
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 298
	call	?save_setup@@YAHXZ			; save_setup
; Line 299
	mov	DWORD PTR ?max_total_norm@@3HA, 0	; max_total_norm
; Line 300
	mov	DWORD PTR ?max_total_adv@@3HA, 0	; max_total_adv
; Line 301
	jmp	SHORT $LN1@InitInstan
$LN2@InitInstan:
; Line 302
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	__wtoi
	add	esp, 4
	mov	DWORD PTR ?max_total_norm@@3HA, eax	; max_total_norm
; Line 303
	push	12					; 0000000cH
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	push	OFFSET $SG77429
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
; Line 304
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	call	__wtoi
	add	esp, 4
	mov	DWORD PTR ?max_total_adv@@3HA, eax	; max_total_adv
$LN1@InitInstan:
; Line 307
	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
; Line 308
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__UpdateWindow@4
; Line 310
	mov	eax, 1
; Line 311
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?InitInstance@@YAHPAUHINSTANCE__@@H@Z ENDP		; InitInstance
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_wincl$ = -48						; size = 48
_hInstance$ = 8						; size = 4
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z PROC		; MyRegisterClass
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
; Line 259
	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR _wincl$[ebp+20], eax
; Line 260
	mov	DWORD PTR _wincl$[ebp+40], OFFSET ?window_class_name@@3PA_WA ; window_class_name
; Line 261
	mov	DWORD PTR _wincl$[ebp+8], OFFSET ?WndProc@@YGJPAUHWND__@@IIJ@Z ; WndProc
; Line 262
	mov	DWORD PTR _wincl$[ebp+4], 11		; 0000000bH
; Line 263
	mov	DWORD PTR _wincl$[ebp], 48		; 00000030H
; Line 264
	push	107					; 0000006bH
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadIconW@8
	mov	DWORD PTR _wincl$[ebp+24], eax
; Line 265
	push	108					; 0000006cH
	mov	edx, DWORD PTR _hInstance$[ebp]
	push	edx
	call	DWORD PTR __imp__LoadIconW@8
	mov	DWORD PTR _wincl$[ebp+44], eax
; Line 266
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorW@8
	mov	DWORD PTR _wincl$[ebp+28], eax
; Line 267
	mov	DWORD PTR _wincl$[ebp+36], 0
; Line 268
	mov	DWORD PTR _wincl$[ebp+12], 0
; Line 269
	mov	DWORD PTR _wincl$[ebp+16], 0
; Line 271
	push	16774640				; 00fff5f0H
	call	DWORD PTR __imp__CreateSolidBrush@4
	mov	DWORD PTR _wincl$[ebp+32], eax
; Line 273
	lea	eax, DWORD PTR _wincl$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExW@4
; Line 274
	mov	esp, ebp
	pop	ebp
	ret	0
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z ENDP		; MyRegisterClass
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -1220						; size = 4
$T3 = -1216						; size = 4
_fontFamily$4 = -1212					; size = 8
_fontFamily$5 = -1204					; size = 8
tv195 = -1196						; size = 4
tv198 = -1192						; size = 4
_len$6 = -1188						; size = 4
_len$7 = -1184						; size = 4
tv90 = -1180						; size = 4
tv79 = -1176						; size = 4
tv199 = -1172						; size = 4
_i$8 = -1168						; size = 4
_i$9 = -1164						; size = 4
_hasSavedScale$ = -1158					; size = 1
_hasSavedFont$ = -1157					; size = 1
_MONOSPACE_FONTS$ = -1156				; size = 52
_wbuf$10 = -1104					; size = 512
_savedFont$ = -592					; size = 512
_scaleBuf$ = -80					; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?InitializeFonts@@YAXXZ PROC				; InitializeFonts
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 102
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitializeFonts@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1208				; 000004b8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp], OFFSET $SG77255
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+4], OFFSET $SG77256
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+8], OFFSET $SG77257
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+12], OFFSET $SG77258
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+16], OFFSET $SG77259
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+20], OFFSET $SG77260
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+24], OFFSET $SG77261
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+28], OFFSET $SG77262
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+32], OFFSET $SG77263
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+36], OFFSET $SG77264
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+40], OFFSET $SG77265
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+44], OFFSET $SG77266
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+48], 0
; Line 120
	xor	eax, eax
	mov	WORD PTR _savedFont$[ebp], ax
	push	510					; 000001feH
	push	0
	lea	ecx, DWORD PTR _savedFont$[ebp+2]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 121
	xor	edx, edx
	mov	WORD PTR _scaleBuf$[ebp], dx
	push	62					; 0000003eH
	push	0
	lea	eax, DWORD PTR _scaleBuf$[ebp+2]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 122
	push	256					; 00000100H
	lea	ecx, DWORD PTR _savedFont$[ebp]
	push	ecx
	push	OFFSET $SG77270
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN15@Initialize
	mov	edx, 2
	imul	eax, edx, 0
	movzx	ecx, WORD PTR _savedFont$[ebp+eax]
	test	ecx, ecx
	je	SHORT $LN15@Initialize
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN16@Initialize
$LN15@Initialize:
	mov	DWORD PTR tv79[ebp], 0
$LN16@Initialize:
	mov	dl, BYTE PTR tv79[ebp]
	mov	BYTE PTR _hasSavedFont$[ebp], dl
; Line 123
	push	32					; 00000020H
	lea	eax, DWORD PTR _scaleBuf$[ebp]
	push	eax
	push	OFFSET $SG77272
	call	?get_setup@@YAHPB_WPA_WH@Z		; get_setup
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN17@Initialize
	mov	ecx, 2
	imul	edx, ecx, 0
	movzx	eax, WORD PTR _scaleBuf$[ebp+edx]
	test	eax, eax
	je	SHORT $LN17@Initialize
	mov	DWORD PTR tv90[ebp], 1
	jmp	SHORT $LN18@Initialize
$LN17@Initialize:
	mov	DWORD PTR tv90[ebp], 0
$LN18@Initialize:
	mov	cl, BYTE PTR tv90[ebp]
	mov	BYTE PTR _hasSavedScale$[ebp], cl
; Line 125
	movzx	edx, BYTE PTR _hasSavedFont$[ebp]
	test	edx, edx
	je	$LN12@Initialize
; Line 126
	push	0
	lea	eax, DWORD PTR _savedFont$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fontFamily$5[ebp]
	call	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 127
	lea	ecx, DWORD PTR _fontFamily$5[ebp]
	call	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
	test	eax, eax
	jne	$LN11@Initialize
; Line 128
	lea	ecx, DWORD PTR _savedFont$[ebp]
	push	ecx
	call	_wcslen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$6[ebp], eax
; Line 129
	xor	ecx, ecx
	mov	eax, DWORD PTR _len$6[ebp]
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR $T3[ebp]
	mov	DWORD PTR ?g_availableMonospaceFont@@3PA_WA, eax ; g_availableMonospaceFont
; Line 130
	lea	ecx, DWORD PTR _savedFont$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$6[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	eax
	call	_wcscpy_s
	add	esp, 12					; 0000000cH
; Line 133
	mov	DWORD PTR _i$8[ebp], 0
	jmp	SHORT $LN10@Initialize
$LN9@Initialize:
	mov	ecx, DWORD PTR _i$8[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$8[ebp], ecx
$LN10@Initialize:
	mov	edx, DWORD PTR _i$8[ebp]
	cmp	DWORD PTR _MONOSPACE_FONTS$[ebp+edx*4], 0
	je	SHORT $LN8@Initialize
; Line 134
	mov	eax, DWORD PTR _i$8[ebp]
	mov	ecx, DWORD PTR _MONOSPACE_FONTS$[ebp+eax*4]
	push	ecx
	lea	edx, DWORD PTR _savedFont$[ebp]
	push	edx
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@Initialize
; Line 135
	mov	eax, DWORD PTR _i$8[ebp]
	mov	DWORD PTR ?g_currentFontIndex@@3HA, eax	; g_currentFontIndex
; Line 136
	jmp	SHORT $LN8@Initialize
$LN7@Initialize:
; Line 138
	jmp	SHORT $LN9@Initialize
$LN8@Initialize:
; Line 141
	movzx	ecx, BYTE PTR _hasSavedScale$[ebp]
	test	ecx, ecx
	je	$LN6@Initialize
; Line 142
	lea	edx, DWORD PTR _scaleBuf$[ebp]
	push	edx
	call	__wtof
	add	esp, 4
	fstp	DWORD PTR ?g_fontScale@@3MA		; g_fontScale
; Line 143
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	comiss	xmm0, DWORD PTR __real@3fc00000
	jbe	SHORT $LN19@Initialize
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR tv195[ebp], xmm0
	jmp	SHORT $LN20@Initialize
$LN19@Initialize:
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	movss	DWORD PTR tv195[ebp], xmm0
$LN20@Initialize:
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR tv195[ebp]
	jbe	SHORT $LN23@Initialize
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv199[ebp], xmm0
	jmp	SHORT $LN24@Initialize
$LN23@Initialize:
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	comiss	xmm0, DWORD PTR __real@3fc00000
	jbe	SHORT $LN21@Initialize
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR tv198[ebp], xmm0
	jmp	SHORT $LN22@Initialize
$LN21@Initialize:
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	movss	DWORD PTR tv198[ebp], xmm0
$LN22@Initialize:
	movss	xmm0, DWORD PTR tv198[ebp]
	movss	DWORD PTR tv199[ebp], xmm0
$LN24@Initialize:
	movss	xmm0, DWORD PTR tv199[ebp]
	movss	DWORD PTR ?g_fontScale@@3MA, xmm0
; Line 144
	jmp	SHORT $LN5@Initialize
$LN6@Initialize:
; Line 145
	lea	eax, DWORD PTR _savedFont$[ebp]
	push	eax
	call	?GetDefaultFontScale@@YAMPB_W@Z		; GetDefaultFontScale
	add	esp, 4
	fstp	DWORD PTR ?g_fontScale@@3MA		; g_fontScale
; Line 147
	cvtss2sd xmm0, DWORD PTR ?g_fontScale@@3MA
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG77287
	lea	ecx, DWORD PTR _scaleBuf$[ebp]
	push	ecx
	call	??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ	; swprintf_s<32>
	add	esp, 16					; 00000010H
; Line 148
	lea	edx, DWORD PTR _scaleBuf$[ebp]
	push	edx
	push	OFFSET $SG77288
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 149
	call	?save_setup@@YAHXZ			; save_setup
$LN5@Initialize:
; Line 151
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$5[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	$LN13@Initialize
$LN11@Initialize:
; Line 153
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$5[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
$LN12@Initialize:
; Line 157
	mov	DWORD PTR _i$9[ebp], 0
	jmp	SHORT $LN4@Initialize
$LN3@Initialize:
	mov	eax, DWORD PTR _i$9[ebp]
	add	eax, 1
	mov	DWORD PTR _i$9[ebp], eax
$LN4@Initialize:
	mov	ecx, DWORD PTR _i$9[ebp]
	cmp	DWORD PTR _MONOSPACE_FONTS$[ebp+ecx*4], 0
	je	$LN2@Initialize
; Line 158
	push	0
	mov	edx, DWORD PTR _i$9[ebp]
	mov	eax, DWORD PTR _MONOSPACE_FONTS$[ebp+edx*4]
	push	eax
	lea	ecx, DWORD PTR _fontFamily$4[ebp]
	call	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 159
	lea	ecx, DWORD PTR _fontFamily$4[ebp]
	call	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
	test	eax, eax
	jne	$LN1@Initialize
; Line 160
	mov	ecx, DWORD PTR _i$9[ebp]
	mov	edx, DWORD PTR _MONOSPACE_FONTS$[ebp+ecx*4]
	push	edx
	call	_wcslen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$7[ebp], eax
; Line 161
	xor	ecx, ecx
	mov	eax, DWORD PTR _len$7[ebp]
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR ?g_availableMonospaceFont@@3PA_WA, eax ; g_availableMonospaceFont
; Line 162
	mov	ecx, DWORD PTR _i$9[ebp]
	mov	edx, DWORD PTR _MONOSPACE_FONTS$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _len$7[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	ecx
	call	_wcscpy_s
	add	esp, 12					; 0000000cH
; Line 163
	mov	edx, DWORD PTR _i$9[ebp]
	mov	DWORD PTR ?g_currentFontIndex@@3HA, edx	; g_currentFontIndex
; Line 166
	mov	eax, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	eax
	call	?GetDefaultFontScale@@YAMPB_W@Z		; GetDefaultFontScale
	add	esp, 4
	fstp	DWORD PTR ?g_fontScale@@3MA		; g_fontScale
; Line 170
	mov	ecx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	ecx
	lea	edx, DWORD PTR _wbuf$10[ebp]
	push	edx
	call	??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z	; wcscpy_s<256>
	add	esp, 8
; Line 171
	lea	eax, DWORD PTR _wbuf$10[ebp]
	push	eax
	push	OFFSET $SG77299
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 172
	cvtss2sd xmm0, DWORD PTR ?g_fontScale@@3MA
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG77300
	lea	ecx, DWORD PTR _wbuf$10[ebp]
	push	ecx
	call	??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ ; swprintf_s<256>
	add	esp, 16					; 00000010H
; Line 173
	lea	edx, DWORD PTR _wbuf$10[ebp]
	push	edx
	push	OFFSET $SG77301
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 174
	call	?save_setup@@YAHXZ			; save_setup
; Line 175
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$4[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	SHORT $LN2@Initialize
$LN1@Initialize:
; Line 177
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$4[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	$LN3@Initialize
$LN2@Initialize:
$LN13@Initialize:
; Line 178
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?InitializeFonts@@YAXXZ$0:
	lea	ecx, DWORD PTR _fontFamily$5[ebp]
	jmp	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
__unwindfunclet$?InitializeFonts@@YAXXZ$1:
	lea	ecx, DWORD PTR _fontFamily$4[ebp]
	jmp	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
__ehhandler$?InitializeFonts@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitializeFonts@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitializeFonts@@YAXXZ ENDP				; InitializeFonts
; Function compile flags: /Odtp
;	COMDAT ??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ PROC		; swprintf_s<256>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 717
	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_vswprintf_s
	add	esp, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ ENDP		; swprintf_s<256>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Source$ = 12						; size = 4
??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z PROC		; wcscpy_s<256>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\string.h
; Line 293
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Source$[ebp]
	push	eax
	push	256					; 00000100H
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	_wcscpy_s
	add	esp, 12					; 0000000cH
	pop	ebp
	ret	0
??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z ENDP		; wcscpy_s<256>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T2 = -604						; size = 4
_fontFamily$3 = -600					; size = 8
$T4 = -592						; size = 4
_startIndex$ = -588					; size = 4
_len$5 = -584						; size = 4
_MONOSPACE_FONTS$ = -580				; size = 52
_wbuf$6 = -528						; size = 512
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SwitchToNextFont@@YAXXZ PROC				; SwitchToNextFont
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 54
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SwitchToNextFont@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 592				; 00000250H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 69
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp], OFFSET $SG77215
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+4], OFFSET $SG77216
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+8], OFFSET $SG77217
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+12], OFFSET $SG77218
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+16], OFFSET $SG77219
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+20], OFFSET $SG77220
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+24], OFFSET $SG77221
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+28], OFFSET $SG77222
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+32], OFFSET $SG77223
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+36], OFFSET $SG77224
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+40], OFFSET $SG77225
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+44], OFFSET $SG77226
	mov	DWORD PTR _MONOSPACE_FONTS$[ebp+48], 0
; Line 72
	cmp	DWORD PTR ?g_availableMonospaceFont@@3PA_WA, 0 ; g_availableMonospaceFont
	je	SHORT $LN5@SwitchToNe
; Line 73
	mov	eax, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@SwitchToNe:
; Line 77
	mov	edx, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	mov	DWORD PTR _startIndex$[ebp], edx
$LN4@SwitchToNe:
; Line 79
	mov	eax, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	add	eax, 1
	xor	edx, edx
	mov	ecx, 12					; 0000000cH
	div	ecx
	mov	DWORD PTR ?g_currentFontIndex@@3HA, edx	; g_currentFontIndex
; Line 80
	push	0
	mov	edx, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	mov	eax, DWORD PTR _MONOSPACE_FONTS$[ebp+edx*4]
	push	eax
	lea	ecx, DWORD PTR _fontFamily$3[ebp]
	call	??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ; Gdiplus::FontFamily::FontFamily
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 81
	lea	ecx, DWORD PTR _fontFamily$3[ebp]
	call	?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ; Gdiplus::FontFamily::GetLastStatus
	test	eax, eax
	jne	$LN1@SwitchToNe
; Line 82
	mov	ecx, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	mov	edx, DWORD PTR _MONOSPACE_FONTS$[ebp+ecx*4]
	push	edx
	call	_wcslen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$5[ebp], eax
; Line 83
	xor	ecx, ecx
	mov	eax, DWORD PTR _len$5[ebp]
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	eax, DWORD PTR $T4[ebp]
	mov	DWORD PTR ?g_availableMonospaceFont@@3PA_WA, eax ; g_availableMonospaceFont
; Line 84
	mov	ecx, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	mov	edx, DWORD PTR _MONOSPACE_FONTS$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _len$5[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	ecx
	call	_wcscpy_s
	add	esp, 12					; 0000000cH
; Line 87
	mov	edx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	edx
	call	?GetDefaultFontScale@@YAMPB_W@Z		; GetDefaultFontScale
	add	esp, 4
	fstp	DWORD PTR ?g_fontScale@@3MA		; g_fontScale
; Line 91
	mov	eax, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	push	eax
	lea	ecx, DWORD PTR _wbuf$6[ebp]
	push	ecx
	call	??$wcscpy_s@$0BAA@@@YAHAAY0BAA@_WPB_W@Z	; wcscpy_s<256>
	add	esp, 8
; Line 92
	lea	edx, DWORD PTR _wbuf$6[ebp]
	push	edx
	push	OFFSET $SG77244
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 93
	cvtss2sd xmm0, DWORD PTR ?g_fontScale@@3MA
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG77250
	lea	eax, DWORD PTR _wbuf$6[ebp]
	push	eax
	call	??$swprintf_s@$0BAA@@@YAHAAY0BAA@_WPB_WZZ ; swprintf_s<256>
	add	esp, 16					; 00000010H
; Line 94
	lea	ecx, DWORD PTR _wbuf$6[ebp]
	push	ecx
	push	OFFSET $SG77251
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 95
	call	?save_setup@@YAHXZ			; save_setup
; Line 96
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$3[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	jmp	SHORT $LN2@SwitchToNe
$LN1@SwitchToNe:
; Line 98
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _fontFamily$3[ebp]
	call	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
	mov	edx, DWORD PTR ?g_currentFontIndex@@3HA	; g_currentFontIndex
	cmp	edx, DWORD PTR _startIndex$[ebp]
	jne	$LN4@SwitchToNe
$LN2@SwitchToNe:
; Line 99
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?SwitchToNextFont@@YAXXZ$0:
	lea	ecx, DWORD PTR _fontFamily$3[ebp]
	jmp	??1FontFamily@Gdiplus@@QAE@XZ		; Gdiplus::FontFamily::~FontFamily
__ehhandler$?SwitchToNextFont@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-596]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SwitchToNextFont@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SwitchToNextFont@@YAXXZ ENDP				; SwitchToNextFont
; Function compile flags: /Odtp
;	COMDAT ??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ
_TEXT	SEGMENT
__ArgList$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Format$ = 12						; size = 4
??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ PROC		; swprintf_s<32>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\wchar.h
; Line 717
	push	ebp
	mov	ebp, esp
	push	ecx
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	32					; 00000020H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	_vswprintf_s
	add	esp, 16					; 00000010H
	mov	esp, ebp
	pop	ebp
	ret	0
??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ ENDP		; swprintf_s<32>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv71 = -76						; size = 4
tv77 = -72						; size = 4
_wbuf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_increase$ = 8						; size = 1
?ChangeFontScale@@YAX_N@Z PROC				; ChangeFontScale
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 40
	movzx	eax, BYTE PTR _increase$[ebp]
	test	eax, eax
	je	SHORT $LN2@ChangeFont
; Line 41
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	addss	xmm0, DWORD PTR __real@3c23d70a
	comiss	xmm0, DWORD PTR __real@3fc00000
	jbe	SHORT $LN5@ChangeFont
	movss	xmm0, DWORD PTR __real@3fc00000
	movss	DWORD PTR tv71[ebp], xmm0
	jmp	SHORT $LN6@ChangeFont
$LN5@ChangeFont:
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	addss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR tv71[ebp], xmm0
$LN6@ChangeFont:
	movss	xmm0, DWORD PTR tv71[ebp]
	movss	DWORD PTR ?g_fontScale@@3MA, xmm0
; Line 42
	jmp	SHORT $LN1@ChangeFont
$LN2@ChangeFont:
; Line 43
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	subss	xmm0, DWORD PTR __real@3c23d70a
	movss	xmm1, DWORD PTR __real@3f000000
	comiss	xmm1, xmm0
	jbe	SHORT $LN7@ChangeFont
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR tv77[ebp], xmm0
	jmp	SHORT $LN8@ChangeFont
$LN7@ChangeFont:
	movss	xmm0, DWORD PTR ?g_fontScale@@3MA
	subss	xmm0, DWORD PTR __real@3c23d70a
	movss	DWORD PTR tv77[ebp], xmm0
$LN8@ChangeFont:
	movss	xmm0, DWORD PTR tv77[ebp]
	movss	DWORD PTR ?g_fontScale@@3MA, xmm0
$LN1@ChangeFont:
; Line 48
	cvtss2sd xmm0, DWORD PTR ?g_fontScale@@3MA
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	push	OFFSET $SG77210
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	call	??$swprintf_s@$0CA@@@YAHAAY0CA@_WPB_WZZ	; swprintf_s<32>
	add	esp, 16					; 00000010H
; Line 49
	lea	edx, DWORD PTR _wbuf$[ebp]
	push	edx
	push	OFFSET $SG77211
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 50
	call	?save_setup@@YAHXZ			; save_setup
; Line 51
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?ChangeFontScale@@YAX_N@Z ENDP				; ChangeFontScale
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_fontName$ = 8						; size = 4
?GetDefaultFontScale@@YAMPB_W@Z PROC			; GetDefaultFontScale
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 26
	push	ebp
	mov	ebp, esp
; Line 27
	push	OFFSET $SG77194
	mov	eax, DWORD PTR _fontName$[ebp]
	push	eax
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@GetDefault
; Line 28
	fld1
	jmp	SHORT $LN1@GetDefault
	jmp	SHORT $LN1@GetDefault
$LN4@GetDefault:
; Line 30
	push	OFFSET $SG77197
	mov	ecx, DWORD PTR _fontName$[ebp]
	push	ecx
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@GetDefault
; Line 31
	fld	DWORD PTR __real@3f68f5c3
	jmp	SHORT $LN1@GetDefault
; Line 33
	jmp	SHORT $LN1@GetDefault
$LN2@GetDefault:
; Line 34
	fld	DWORD PTR __real@3f7851ec
$LN1@GetDefault:
; Line 36
	pop	ebp
	ret	0
?GetDefaultFontScale@@YAMPB_W@Z ENDP			; GetDefaultFontScale
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetImageEncoders@Gdiplus@@YA?AW4Status@1@IIPAVImageCodecInfo@1@@Z
_TEXT	SEGMENT
_numEncoders$ = 8					; size = 4
_size$ = 12						; size = 4
_encoders$ = 16						; size = 4
?GetImageEncoders@Gdiplus@@YA?AW4Status@1@IIPAVImageCodecInfo@1@@Z PROC ; Gdiplus::GetImageEncoders, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusimagecodec.h
; Line 55
	push	ebp
	mov	ebp, esp
; Line 56
	mov	eax, DWORD PTR _encoders$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _numEncoders$[ebp]
	push	edx
	call	_GdipGetImageEncoders@12
; Line 57
	pop	ebp
	ret	0
?GetImageEncoders@Gdiplus@@YA?AW4Status@1@IIPAVImageCodecInfo@1@@Z ENDP ; Gdiplus::GetImageEncoders
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetImageEncodersSize@Gdiplus@@YA?AW4Status@1@PAI0@Z
_TEXT	SEGMENT
_numEncoders$ = 8					; size = 4
_size$ = 12						; size = 4
?GetImageEncodersSize@Gdiplus@@YA?AW4Status@1@PAI0@Z PROC ; Gdiplus::GetImageEncodersSize, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusimagecodec.h
; Line 45
	push	ebp
	mov	ebp, esp
; Line 46
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _numEncoders$[ebp]
	push	ecx
	call	_GdipGetImageEncodersSize@8
; Line 47
	pop	ebp
	ret	0
?GetImageEncodersSize@Gdiplus@@YA?AW4Status@1@PAI0@Z ENDP ; Gdiplus::GetImageEncodersSize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC ; Gdiplus::Graphics::SetStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 2394
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2395
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@SetStatus
; Line 2396
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _status$[ebp]
	jmp	SHORT $LN3@SetStatus
; Line 2397
	jmp	SHORT $LN3@SetStatus
$LN2@SetStatus:
; Line 2398
	mov	eax, DWORD PTR _status$[ebp]
$LN3@SetStatus:
; Line 2399
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP ; Gdiplus::Graphics::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_graphics$ = 8						; size = 4
?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z PROC ; Gdiplus::Graphics::SetNativeGraphics, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 2389
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 2390
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _graphics$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 2391
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ENDP ; Gdiplus::Graphics::SetNativeGraphics
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
tv71 = -4						; size = 4
_image$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HH@Z PROC ; Gdiplus::Graphics::DrawImage, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 1551
	cmp	DWORD PTR _image$[ebp], 0
	je	SHORT $LN3@DrawImage
	mov	eax, DWORD PTR _image$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	jmp	SHORT $LN4@DrawImage
$LN3@DrawImage:
	mov	DWORD PTR tv71[ebp], 0
$LN4@DrawImage:
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_GdipDrawImageI@16
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 1552
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DrawImage@Graphics@Gdiplus@@QAE?AW4Status@2@PAVImage@2@HH@Z ENDP ; Gdiplus::Graphics::DrawImage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z
_TEXT	SEGMENT
_rect$ = -28						; size = 16
_this$ = -12						; size = 4
tv82 = -8						; size = 4
tv76 = -4						; size = 4
_string$ = 8						; size = 4
_length$ = 12						; size = 4
_font$ = 16						; size = 4
_origin$ = 20						; size = 4
_brush$ = 24						; size = 4
?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z PROC ; Gdiplus::Graphics::DrawString, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 1220
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1221
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _origin$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+4]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _origin$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx]
	movss	DWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _rect$[ebp]
	call	??0RectF@Gdiplus@@QAE@MMMM@Z		; Gdiplus::RectF::RectF
; Line 1231
	cmp	DWORD PTR _brush$[ebp], 0
	je	SHORT $LN3@DrawString
	mov	edx, DWORD PTR _brush$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@DrawString
$LN3@DrawString:
	mov	DWORD PTR tv76[ebp], 0
$LN4@DrawString:
	cmp	DWORD PTR _font$[ebp], 0
	je	SHORT $LN5@DrawString
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv82[ebp], edx
	jmp	SHORT $LN6@DrawString
$LN5@DrawString:
	mov	DWORD PTR tv82[ebp], 0
$LN6@DrawString:
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_GdipDrawString@28
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 1232
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawString@Graphics@Gdiplus@@QAE?AW4Status@2@PB_WHPBVFont@2@ABVPointF@2@PBVBrush@2@@Z ENDP ; Gdiplus::Graphics::DrawString
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_brush$ = 8						; size = 4
_path$ = 12						; size = 4
?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z PROC ; Gdiplus::Graphics::FillPath, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 1133
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1136
	mov	eax, DWORD PTR _path$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _brush$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GdipFillPath@12
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 1137
	mov	esp, ebp
	pop	ebp
	ret	8
?FillPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVBrush@2@PBVGraphicsPath@2@@Z ENDP ; Gdiplus::Graphics::FillPath
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Clear@Graphics@Gdiplus@@QAE?AW4Status@2@ABVColor@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_color$ = 8						; size = 4
?Clear@Graphics@Gdiplus@@QAE?AW4Status@2@ABVColor@2@@Z PROC ; Gdiplus::Graphics::Clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 943
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 946
	mov	ecx, DWORD PTR _color$[ebp]
	call	?GetValue@Color@Gdiplus@@QBEKXZ		; Gdiplus::Color::GetValue
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipGraphicsClear@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 947
	mov	esp, ebp
	pop	ebp
	ret	4
?Clear@Graphics@Gdiplus@@QAE?AW4Status@2@ABVColor@2@@Z ENDP ; Gdiplus::Graphics::Clear
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
tv69 = -4						; size = 4
_pen$ = 8						; size = 4
_path$ = 12						; size = 4
?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z PROC ; Gdiplus::Graphics::DrawPath, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 824
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 827
	cmp	DWORD PTR _path$[ebp], 0
	je	SHORT $LN3@DrawPath
	mov	eax, DWORD PTR _path$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@DrawPath
$LN3@DrawPath:
	mov	DWORD PTR tv69[ebp], 0
$LN4@DrawPath:
	cmp	DWORD PTR _pen$[ebp], 0
	je	SHORT $LN5@DrawPath
	mov	edx, DWORD PTR _pen$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN6@DrawPath
$LN5@DrawPath:
	mov	DWORD PTR tv73[ebp], 0
$LN6@DrawPath:
	mov	ecx, DWORD PTR tv69[ebp]
	push	ecx
	mov	edx, DWORD PTR tv73[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDrawPath@12
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 828
	mov	esp, ebp
	pop	ebp
	ret	8
?DrawPath@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@PBVGraphicsPath@2@@Z ENDP ; Gdiplus::Graphics::DrawPath
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pen$ = 8						; size = 4
_x1$ = 12						; size = 4
_y1$ = 16						; size = 4
_x2$ = 20						; size = 4
_y2$ = 24						; size = 4
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z PROC ; Gdiplus::Graphics::DrawLine, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 453
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pen$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDrawLineI@24
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Graphics@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Graphics::SetStatus
; Line 460
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawLine@Graphics@Gdiplus@@QAE?AW4Status@2@PBVPen@2@HHHH@Z ENDP ; Gdiplus::Graphics::DrawLine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Graphics@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Graphics@Gdiplus@@QAE@XZ PROC			; Gdiplus::Graphics::~Graphics, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 102
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeleteGraphics@4
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
??1Graphics@Gdiplus@@QAE@XZ ENDP			; Gdiplus::Graphics::~Graphics
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z
_TEXT	SEGMENT
_graphics$ = -8						; size = 4
_this$ = -4						; size = 4
_image$ = 8						; size = 4
??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z PROC		; Gdiplus::Graphics::Graphics, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	DWORD PTR _graphics$[ebp], 0
; Line 93
	cmp	DWORD PTR _image$[ebp], 0
	je	SHORT $LN1@Graphics
; Line 96
	lea	eax, DWORD PTR _graphics$[ebp]
	push	eax
	mov	ecx, DWORD PTR _image$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_GdipGetImageGraphicsContext@8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN1@Graphics:
; Line 98
	mov	edx, DWORD PTR _graphics$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ; Gdiplus::Graphics::SetNativeGraphics
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Graphics@Gdiplus@@QAE@PAVImage@1@@Z ENDP		; Gdiplus::Graphics::Graphics
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z
_TEXT	SEGMENT
_graphics$ = -8						; size = 4
_this$ = -4						; size = 4
_hdc$ = 8						; size = 4
??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z PROC		; Gdiplus::Graphics::Graphics, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusgraphics.h
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	DWORD PTR _graphics$[ebp], 0
; Line 57
	lea	eax, DWORD PTR _graphics$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hdc$[ebp]
	push	ecx
	call	_GdipCreateFromHDC@8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 59
	mov	eax, DWORD PTR _graphics$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeGraphics@Graphics@Gdiplus@@IAEXPAVGpGraphics@2@@Z ; Gdiplus::Graphics::SetNativeGraphics
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0Graphics@Gdiplus@@QAE@PAUHDC__@@@Z ENDP		; Gdiplus::Graphics::Graphics
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC ; Gdiplus::GraphicsPath::SetStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 885
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 886
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@SetStatus
; Line 887
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _status$[ebp]
	jmp	SHORT $LN3@SetStatus
; Line 888
	jmp	SHORT $LN3@SetStatus
$LN2@SetStatus:
; Line 889
	mov	eax, DWORD PTR _status$[ebp]
$LN3@SetStatus:
; Line 890
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP ; Gdiplus::GraphicsPath::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_matrix$ = 8						; size = 4
?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z PROC ; Gdiplus::GraphicsPath::Transform, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 678
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 679
	cmp	DWORD PTR _matrix$[ebp], 0
	je	SHORT $LN2@Transform
; Line 681
	mov	eax, DWORD PTR _matrix$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_GdipTransformPath@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
	jmp	SHORT $LN3@Transform
; Line 682
	jmp	SHORT $LN3@Transform
$LN2@Transform:
; Line 683
	xor	eax, eax
$LN3@Transform:
; Line 684
	mov	esp, ebp
	pop	ebp
	ret	4
?Transform@GraphicsPath@Gdiplus@@QAE?AW4Status@2@PBVMatrix@2@@Z ENDP ; Gdiplus::GraphicsPath::Transform
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
_startAngle$ = 24					; size = 4
_sweepAngle$ = 28					; size = 4
?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z PROC ; Gdiplus::GraphicsPath::AddArc, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 268
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	push	ecx
	movss	xmm0, DWORD PTR _sweepAngle$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _startAngle$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GdipAddPathArcI@28
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
; Line 276
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?AddArc@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHHMM@Z ENDP ; Gdiplus::GraphicsPath::AddArc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z PROC ; Gdiplus::GraphicsPath::AddLine, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 218
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 223
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GdipAddPathLineI@20
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
; Line 224
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?AddLine@GraphicsPath@Gdiplus@@QAE?AW4Status@2@HHHH@Z ENDP ; Gdiplus::GraphicsPath::AddLine
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ PROC ; Gdiplus::GraphicsPath::CloseFigure, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 154
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipClosePathFigure@4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
; Line 155
	mov	esp, ebp
	pop	ebp
	ret	0
?CloseFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ENDP ; Gdiplus::GraphicsPath::CloseFigure
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ PROC ; Gdiplus::GraphicsPath::StartFigure, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipStartPathFigure@4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@GraphicsPath@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::GraphicsPath::SetStatus
; Line 150
	mov	esp, ebp
	pop	ebp
	ret	0
?StartFigure@GraphicsPath@Gdiplus@@QAE?AW4Status@2@XZ ENDP ; Gdiplus::GraphicsPath::StartFigure
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1GraphicsPath@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1GraphicsPath@Gdiplus@@QAE@XZ PROC			; Gdiplus::GraphicsPath::~GraphicsPath, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeletePath@4
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
??1GraphicsPath@Gdiplus@@QAE@XZ ENDP			; Gdiplus::GraphicsPath::~GraphicsPath
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_fillMode$ = 8						; size = 4
??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z PROC	; Gdiplus::GraphicsPath::GraphicsPath, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspath.h
; Line 27
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 30
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fillMode$[ebp]
	push	edx
	call	_GdipCreatePath@8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0GraphicsPath@Gdiplus@@QAE@W4FillMode@1@@Z ENDP	; Gdiplus::GraphicsPath::GraphicsPath
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Pen@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Pen@Gdiplus@@QAE@XZ PROC				; Gdiplus::Pen::~Pen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspen.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeletePen@4
; Line 48
	mov	esp, ebp
	pop	ebp
	ret	0
??1Pen@Gdiplus@@QAE@XZ ENDP				; Gdiplus::Pen::~Pen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z
_TEXT	SEGMENT
_unit$ = -8						; size = 4
_this$ = -4						; size = 4
_color$ = 8						; size = 4
_width$ = 12						; size = 4
??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z PROC			; Gdiplus::Pen::Pen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluspen.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	DWORD PTR _unit$[ebp], 0
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 33
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _unit$[ebp]
	push	edx
	push	ecx
	movss	xmm0, DWORD PTR _width$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _color$[ebp]
	call	?GetValue@Color@Gdiplus@@QBEKXZ		; Gdiplus::Color::GetValue
	push	eax
	call	_GdipCreatePen1@16
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0Pen@Gdiplus@@QAE@ABVColor@1@M@Z ENDP			; Gdiplus::Pen::Pen
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GSolidBrush@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSolidBrush@Gdiplus@@UAEPAXI@Z PROC			; Gdiplus::SolidBrush::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SolidBrush@Gdiplus@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSolidBrush@Gdiplus@@UAEPAXI@Z ENDP			; Gdiplus::SolidBrush::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1SolidBrush@Gdiplus@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1SolidBrush@Gdiplus@@UAE@XZ PROC			; Gdiplus::SolidBrush::~SolidBrush, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Brush@Gdiplus@@UAE@XZ		; Gdiplus::Brush::~Brush
	mov	esp, ebp
	pop	ebp
	ret	0
??1SolidBrush@Gdiplus@@UAE@XZ ENDP			; Gdiplus::SolidBrush::~SolidBrush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z
_TEXT	SEGMENT
_brush$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_color$ = 8						; size = 4
??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z PROC		; Gdiplus::SolidBrush::SolidBrush, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 112
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Brush@Gdiplus@@IAE@XZ		; Gdiplus::Brush::Brush
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SolidBrush@Gdiplus@@6B@
; Line 114
	mov	DWORD PTR _brush$[ebp], 0
; Line 116
	lea	ecx, DWORD PTR _brush$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _color$[ebp]
	call	?GetValue@Color@Gdiplus@@QBEKXZ		; Gdiplus::Color::GetValue
	push	eax
	call	_GdipCreateSolidFill@8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 118
	mov	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z ; Gdiplus::Brush::SetNativeBrush
; Line 119
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Brush@Gdiplus@@UAE@XZ		; Gdiplus::Brush::~Brush
__ehhandler$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SolidBrush@Gdiplus@@QAE@ABVColor@1@@Z ENDP		; Gdiplus::SolidBrush::SolidBrush
; Function compile flags: /Odtp
;	COMDAT ??_GBrush@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GBrush@Gdiplus@@UAEPAXI@Z PROC			; Gdiplus::Brush::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Brush@Gdiplus@@UAE@XZ		; Gdiplus::Brush::~Brush
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBrush@Gdiplus@@UAEPAXI@Z ENDP			; Gdiplus::Brush::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC	; Gdiplus::Brush::SetStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@SetStatus
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _status$[ebp]
	jmp	SHORT $LN3@SetStatus
; Line 95
	jmp	SHORT $LN3@SetStatus
$LN2@SetStatus:
; Line 96
	mov	eax, DWORD PTR _status$[ebp]
$LN3@SetStatus:
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP	; Gdiplus::Brush::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nativeBrush$ = 8					; size = 4
?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z PROC	; Gdiplus::Brush::SetNativeBrush, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nativeBrush$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 89
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z ENDP	; Gdiplus::Brush::SetNativeBrush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Brush@Gdiplus@@IAE@PAVGpBrush@1@W4Status@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nativeBrush$ = 8					; size = 4
_status$ = 12						; size = 4
??0Brush@Gdiplus@@IAE@PAVGpBrush@1@W4Status@1@@Z PROC	; Gdiplus::Brush::Brush, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 80
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Brush@Gdiplus@@6B@
; Line 82
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 83
	mov	eax, DWORD PTR _nativeBrush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeBrush@Brush@Gdiplus@@IAEXPAVGpBrush@2@@Z ; Gdiplus::Brush::SetNativeBrush
; Line 84
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0Brush@Gdiplus@@IAE@PAVGpBrush@1@W4Status@1@@Z ENDP	; Gdiplus::Brush::Brush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Brush@Gdiplus@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Brush@Gdiplus@@IAE@XZ PROC				; Gdiplus::Brush::Brush, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Brush@Gdiplus@@6B@
; Line 72
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Brush::SetStatus
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Brush@Gdiplus@@IAE@XZ ENDP				; Gdiplus::Brush::Brush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Clone@Brush@Gdiplus@@UBEPAV12@XZ
_TEXT	SEGMENT
$T2 = -36						; size = 4
_newBrush$ = -32					; size = 4
tv80 = -28						; size = 4
$T3 = -24						; size = 4
_brush$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@Brush@Gdiplus@@UBEPAV12@XZ PROC			; Gdiplus::Brush::Clone, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 36
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@Brush@Gdiplus@@UBEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	mov	DWORD PTR _brush$[ebp], 0
; Line 39
	lea	eax, DWORD PTR _brush$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_GdipCloneBrush@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Brush@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Brush::SetStatus
; Line 41
	push	12					; 0000000cH
	call	??2GdiplusBase@Gdiplus@@SAPAXI@Z	; Gdiplus::GdiplusBase::operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN4@Clone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _brush$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Brush@Gdiplus@@IAE@PAVGpBrush@1@W4Status@1@@Z ; Gdiplus::Brush::Brush
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN5@Clone
$LN4@Clone:
	mov	DWORD PTR tv80[ebp], 0
$LN5@Clone:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR _newBrush$[ebp], ecx
; Line 43
	cmp	DWORD PTR _newBrush$[ebp], 0
	jne	SHORT $LN1@Clone
; Line 45
	mov	edx, DWORD PTR _brush$[ebp]
	push	edx
	call	_GdipDeleteBrush@4
$LN1@Clone:
; Line 48
	mov	eax, DWORD PTR _newBrush$[ebp]
; Line 49
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@Brush@Gdiplus@@UBEPAV12@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@Brush@Gdiplus@@UBEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@Brush@Gdiplus@@UBEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@Brush@Gdiplus@@UBEPAV12@XZ ENDP			; Gdiplus::Brush::Clone
; Function compile flags: /Odtp
;	COMDAT ??1Brush@Gdiplus@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Brush@Gdiplus@@UAE@XZ PROC				; Gdiplus::Brush::~Brush, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbrush.h
; Line 31
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Brush@Gdiplus@@6B@
; Line 32
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_GdipDeleteBrush@4
; Line 33
	mov	esp, ebp
	pop	ebp
	ret	0
??1Brush@Gdiplus@@UAE@XZ ENDP				; Gdiplus::Brush::~Brush
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC	; Gdiplus::Matrix::SetStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 297
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 298
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@SetStatus
; Line 299
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _status$[ebp]
	jmp	SHORT $LN3@SetStatus
; Line 300
	jmp	SHORT $LN3@SetStatus
$LN2@SetStatus:
; Line 301
	mov	eax, DWORD PTR _status$[ebp]
$LN3@SetStatus:
; Line 302
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP	; Gdiplus::Matrix::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetNativeMatrix@Matrix@Gdiplus@@IAEXPAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nativeMatrix$ = 8					; size = 4
?SetNativeMatrix@Matrix@Gdiplus@@IAEXPAV12@@Z PROC	; Gdiplus::Matrix::SetNativeMatrix, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 292
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 293
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nativeMatrix$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 294
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNativeMatrix@Matrix@Gdiplus@@IAEXPAV12@@Z ENDP	; Gdiplus::Matrix::SetNativeMatrix
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_offsetX$ = 8						; size = 4
_offsetY$ = 12						; size = 4
_order$ = 16						; size = 4
?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z PROC ; Gdiplus::Matrix::Translate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _order$[ebp]
	push	eax
	push	ecx
	movss	xmm0, DWORD PTR _offsetY$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _offsetX$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GdipTranslateMatrix@16
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Matrix::SetStatus
; Line 151
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Translate@Matrix@Gdiplus@@QAE?AW4Status@2@MMW4MatrixOrder@2@@Z ENDP ; Gdiplus::Matrix::Translate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ PROC		; Gdiplus::Matrix::Reset, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 131
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 134
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipSetMatrixElements@28
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Matrix@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Matrix::SetStatus
; Line 135
	mov	esp, ebp
	pop	ebp
	ret	0
?Reset@Matrix@Gdiplus@@QAE?AW4Status@2@XZ ENDP		; Gdiplus::Matrix::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Matrix@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Matrix@Gdiplus@@QAE@XZ PROC				; Gdiplus::Matrix::~Matrix, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeleteMatrix@4
; Line 79
	mov	esp, ebp
	pop	ebp
	ret	0
??1Matrix@Gdiplus@@QAE@XZ ENDP				; Gdiplus::Matrix::~Matrix
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Matrix@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_matrix$ = -8						; size = 4
_this$ = -4						; size = 4
??0Matrix@Gdiplus@@QAE@XZ PROC				; Gdiplus::Matrix::Matrix, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusmatrix.h
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 30
	mov	DWORD PTR _matrix$[ebp], 0
; Line 32
	lea	eax, DWORD PTR _matrix$[ebp]
	push	eax
	call	_GdipCreateMatrix@4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 34
	mov	edx, DWORD PTR _matrix$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeMatrix@Matrix@Gdiplus@@IAEXPAV12@@Z ; Gdiplus::Matrix::SetNativeMatrix
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix@Gdiplus@@QAE@XZ ENDP				; Gdiplus::Matrix::Matrix
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBitmap@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GBitmap@Gdiplus@@UAEPAXI@Z PROC			; Gdiplus::Bitmap::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Bitmap@Gdiplus@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBitmap@Gdiplus@@UAEPAXI@Z ENDP			; Gdiplus::Bitmap::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Bitmap@Gdiplus@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Bitmap@Gdiplus@@UAE@XZ PROC				; Gdiplus::Bitmap::~Bitmap, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Image@Gdiplus@@UAE@XZ		; Gdiplus::Image::~Image
	mov	esp, ebp
	pop	ebp
	ret	0
??1Bitmap@Gdiplus@@UAE@XZ ENDP				; Gdiplus::Bitmap::~Bitmap
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z
_TEXT	SEGMENT
_bitmap$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_width$ = 8						; size = 4
_height$ = 12						; size = 4
_target$ = 16						; size = 4
??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z PROC		; Gdiplus::Bitmap::Bitmap, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 619
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Image@Gdiplus@@IAE@XZ		; Gdiplus::Image::Image
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Bitmap@Gdiplus@@6B@
; Line 620
	mov	DWORD PTR _bitmap$[ebp], 0
; Line 625
	lea	ecx, DWORD PTR _bitmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _height$[ebp]
	push	ecx
	mov	edx, DWORD PTR _width$[ebp]
	push	edx
	call	_GdipCreateBitmapFromGraphics@16
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 627
	mov	edx, DWORD PTR _bitmap$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z ; Gdiplus::Image::SetNativeImage
; Line 628
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Image@Gdiplus@@UAE@XZ		; Gdiplus::Image::~Image
__ehhandler$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Bitmap@Gdiplus@@QAE@HHPAVGraphics@1@@Z ENDP		; Gdiplus::Bitmap::Bitmap
; Function compile flags: /Odtp
;	COMDAT ??_GImage@Gdiplus@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GImage@Gdiplus@@UAEPAXI@Z PROC			; Gdiplus::Image::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Image@Gdiplus@@UAE@XZ		; Gdiplus::Image::~Image
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GImage@Gdiplus@@UAEPAXI@Z ENDP			; Gdiplus::Image::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_status$ = 8						; size = 4
?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z PROC	; Gdiplus::Image::SetStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusheaders.h
; Line 478
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 479
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@SetStatus
; Line 480
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _status$[ebp]
	jmp	SHORT $LN3@SetStatus
; Line 481
	jmp	SHORT $LN3@SetStatus
$LN2@SetStatus:
; Line 482
	mov	eax, DWORD PTR _status$[ebp]
$LN3@SetStatus:
; Line 483
	mov	esp, ebp
	pop	ebp
	ret	4
?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ENDP	; Gdiplus::Image::SetStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nativeImage$ = 8					; size = 4
?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z PROC	; Gdiplus::Image::SetNativeImage, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 530
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 531
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nativeImage$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 532
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z ENDP	; Gdiplus::Image::SetNativeImage
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_nativeImage$ = 8					; size = 4
_status$ = 12						; size = 4
??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z PROC	; Gdiplus::Image::Image, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 523
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Image@Gdiplus@@6B@
; Line 524
	mov	ecx, DWORD PTR _nativeImage$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeImage@Image@Gdiplus@@IAEXPAVGpImage@2@@Z ; Gdiplus::Image::SetNativeImage
; Line 525
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z ENDP	; Gdiplus::Image::Image
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Image@Gdiplus@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Image@Gdiplus@@IAE@XZ PROC				; Gdiplus::Image::Image, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusheaders.h
; Line 471
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Image@Gdiplus@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Image@Gdiplus@@IAE@XZ ENDP				; Gdiplus::Image::Image
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Save@Image@Gdiplus@@QAE?AW4Status@2@PB_WPBU_GUID@@PBVEncoderParameters@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_filename$ = 8						; size = 4
_clsidEncoder$ = 12					; size = 4
_encoderParams$ = 16					; size = 4
?Save@Image@Gdiplus@@QAE?AW4Status@2@PB_WPBU_GUID@@PBVEncoderParameters@2@@Z PROC ; Gdiplus::Image::Save, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 136
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _encoderParams$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clsidEncoder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GdipSaveImageToFile@16
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus
; Line 141
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Save@Image@Gdiplus@@QAE?AW4Status@2@PB_WPBU_GUID@@PBVEncoderParameters@2@@Z ENDP ; Gdiplus::Image::Save
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Clone@Image@Gdiplus@@UAEPAV12@XZ
_TEXT	SEGMENT
$T2 = -32						; size = 4
tv80 = -28						; size = 4
$T3 = -24						; size = 4
_cloneimage$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@Image@Gdiplus@@UAEPAV12@XZ PROC			; Gdiplus::Image::Clone, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@Image@Gdiplus@@UAEPAV12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	DWORD PTR _cloneimage$[ebp], 0
; Line 99
	lea	eax, DWORD PTR _cloneimage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_GdipCloneImage@8
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetStatus@Image@Gdiplus@@IBE?AW4Status@2@W432@@Z ; Gdiplus::Image::SetStatus
; Line 101
	push	16					; 00000010H
	call	??2GdiplusBase@Gdiplus@@SAPAXI@Z	; Gdiplus::GdiplusBase::operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@Clone
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _cloneimage$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Image@Gdiplus@@IAE@PAVGpImage@1@W4Status@1@@Z ; Gdiplus::Image::Image
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN4@Clone
$LN3@Clone:
	mov	DWORD PTR tv80[ebp], 0
$LN4@Clone:
	mov	eax, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T2[ebp]
; Line 102
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@Image@Gdiplus@@UAEPAV12@XZ$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3GdiplusBase@Gdiplus@@SAXPAX@Z	; Gdiplus::GdiplusBase::operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@Image@Gdiplus@@UAEPAV12@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@Image@Gdiplus@@UAEPAV12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@Image@Gdiplus@@UAEPAV12@XZ ENDP			; Gdiplus::Image::Clone
; Function compile flags: /Odtp
;	COMDAT ??1Image@Gdiplus@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Image@Gdiplus@@UAE@XZ PROC				; Gdiplus::Image::~Image, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbitmap.h
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Image@Gdiplus@@6B@
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_GdipDisposeImage@4
; Line 92
	mov	esp, ebp
	pop	ebp
	ret	0
??1Image@Gdiplus@@UAE@XZ ENDP				; Gdiplus::Image::~Image
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?SetNativeFont@Font@Gdiplus@@IAEXPAVGpFont@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_Font$ = 8						; size = 4
?SetNativeFont@Font@Gdiplus@@IAEXPAVGpFont@2@@Z PROC	; Gdiplus::Font::SetNativeFont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfont.h
; Line 261
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 262
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Font$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 263
	mov	esp, ebp
	pop	ebp
	ret	4
?SetNativeFont@Font@Gdiplus@@IAEXPAVGpFont@2@@Z ENDP	; Gdiplus::Font::SetNativeFont
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Font@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Font@Gdiplus@@QAE@XZ PROC				; Gdiplus::Font::~Font, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfont.h
; Line 178
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeleteFont@4
; Line 180
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@Gdiplus@@QAE@XZ ENDP				; Gdiplus::Font::~Font
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Font@Gdiplus@@QAE@PBVFontFamily@1@MHW4Unit@1@@Z
_TEXT	SEGMENT
_font$ = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
_family$ = 8						; size = 4
_emSize$ = 12						; size = 4
_style$ = 16						; size = 4
_unit$ = 20						; size = 4
??0Font@Gdiplus@@QAE@PBVFontFamily@1@MHW4Unit@1@@Z PROC	; Gdiplus::Font::Font, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfont.h
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx
; Line 93
	mov	DWORD PTR _font$[ebp], 0
; Line 99
	cmp	DWORD PTR _family$[ebp], 0
	je	SHORT $LN3@Font
	mov	eax, DWORD PTR _family$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	jmp	SHORT $LN4@Font
$LN3@Font:
	mov	DWORD PTR tv72[ebp], 0
$LN4@Font:
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	mov	eax, DWORD PTR _unit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _style$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _emSize$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR tv72[ebp]
	push	edx
	call	_GdipCreateFont@20
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 101
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetNativeFont@Font@Gdiplus@@IAEXPAVGpFont@2@@Z ; Gdiplus::Font::SetNativeFont
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Font@Gdiplus@@QAE@PBVFontFamily@1@MHW4Unit@1@@Z ENDP	; Gdiplus::Font::Font
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ
_TEXT	SEGMENT
_lastStatus$ = -8					; size = 4
_this$ = -4						; size = 4
?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ PROC ; Gdiplus::FontFamily::GetLastStatus, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfontfamily.h
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 192
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _lastStatus$[ebp], ecx
; Line 193
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 195
	mov	eax, DWORD PTR _lastStatus$[ebp]
; Line 196
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLastStatus@FontFamily@Gdiplus@@QBE?AW4Status@2@XZ ENDP ; Gdiplus::FontFamily::GetLastStatus
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1FontFamily@Gdiplus@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1FontFamily@Gdiplus@@QAE@XZ PROC			; Gdiplus::FontFamily::~FontFamily, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfontfamily.h
; Line 107
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GdipDeleteFontFamily@4
; Line 109
	mov	esp, ebp
	pop	ebp
	ret	0
??1FontFamily@Gdiplus@@QAE@XZ ENDP			; Gdiplus::FontFamily::~FontFamily
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z
_TEXT	SEGMENT
tv71 = -8						; size = 4
_this$ = -4						; size = 4
_name$ = 8						; size = 4
_fontCollection$ = 12					; size = 4
??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z PROC ; Gdiplus::FontFamily::FontFamily, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusfontfamily.h
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 36
	cmp	DWORD PTR _fontCollection$[ebp], 0
	je	SHORT $LN3@FontFamily
	mov	ecx, DWORD PTR _fontCollection$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN4@FontFamily
$LN3@FontFamily:
	mov	DWORD PTR tv71[ebp], 0
$LN4@FontFamily:
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv71[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_GdipCreateFontFamilyFromName@12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0FontFamily@Gdiplus@@QAE@PB_WPBVFontCollection@1@@Z ENDP ; Gdiplus::FontFamily::FontFamily
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?MakeARGB@Color@Gdiplus@@SAKEEEE@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
?MakeARGB@Color@Gdiplus@@SAKEEEE@Z PROC			; Gdiplus::Color::MakeARGB, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluscolor.h
; Line 312
	push	ebp
	mov	ebp, esp
; Line 316
	movzx	eax, BYTE PTR _b$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _r$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	movzx	ecx, BYTE PTR _a$[ebp]
	shl	ecx, 24					; 00000018H
	or	eax, ecx
; Line 317
	pop	ebp
	ret	0
?MakeARGB@Color@Gdiplus@@SAKEEEE@Z ENDP			; Gdiplus::Color::MakeARGB
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?GetValue@Color@Gdiplus@@QBEKXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetValue@Color@Gdiplus@@QBEKXZ PROC			; Gdiplus::Color::GetValue, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluscolor.h
; Line 120
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 122
	mov	esp, ebp
	pop	ebp
	ret	0
?GetValue@Color@Gdiplus@@QBEKXZ ENDP			; Gdiplus::Color::GetValue
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Color@Gdiplus@@QAE@EEEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 1
_r$ = 12						; size = 1
_g$ = 16						; size = 1
_b$ = 20						; size = 1
??0Color@Gdiplus@@QAE@EEEE@Z PROC			; Gdiplus::Color::Color, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdipluscolor.h
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 71
	movzx	eax, BYTE PTR _b$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _g$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _r$[ebp]
	push	edx
	movzx	eax, BYTE PTR _a$[ebp]
	push	eax
	call	?MakeARGB@Color@Gdiplus@@SAKEEEE@Z	; Gdiplus::Color::MakeARGB
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Color@Gdiplus@@QAE@EEEE@Z ENDP			; Gdiplus::Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_debugEventCallback$ = 8				; size = 4
_suppressBackgroundThread$ = 12				; size = 4
_suppressExternalCodecs$ = 16				; size = 4
??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z PROC ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusinit.h
; Line 46
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
; Line 52
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _debugEventCallback$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _suppressBackgroundThread$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 54
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _suppressExternalCodecs$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ENDP ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0RectF@Gdiplus@@QAE@MMMM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
_height$ = 20						; size = 4
??0RectF@Gdiplus@@QAE@MMMM@Z PROC			; Gdiplus::RectF::RectF, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplustypes.h
; Line 351
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 357
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
; Line 358
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _width$[ebp]
	movss	DWORD PTR [edx+8], xmm0
; Line 359
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _height$[ebp]
	movss	DWORD PTR [eax+12], xmm0
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0RectF@Gdiplus@@QAE@MMMM@Z ENDP			; Gdiplus::RectF::RectF
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0PointF@Gdiplus@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0PointF@Gdiplus@@QAE@MM@Z PROC			; Gdiplus::PointF::PointF, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplustypes.h
; Line 254
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 257
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 258
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR [ecx+4], xmm0
; Line 259
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0PointF@Gdiplus@@QAE@MM@Z ENDP			; Gdiplus::PointF::PointF
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2GdiplusBase@Gdiplus@@SAPAXI@Z
_TEXT	SEGMENT
_in_size$ = 8						; size = 4
??2GdiplusBase@Gdiplus@@SAPAXI@Z PROC			; Gdiplus::GdiplusBase::operator new, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbase.h
; Line 26
	push	ebp
	mov	ebp, esp
; Line 27
	mov	eax, DWORD PTR _in_size$[ebp]
	push	eax
	call	_GdipAlloc@4
; Line 28
	pop	ebp
	ret	0
??2GdiplusBase@Gdiplus@@SAPAXI@Z ENDP			; Gdiplus::GdiplusBase::operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??3GdiplusBase@Gdiplus@@SAXPAX@Z
_TEXT	SEGMENT
_in_pVoid$ = 8						; size = 4
??3GdiplusBase@Gdiplus@@SAXPAX@Z PROC			; Gdiplus::GdiplusBase::operator delete, COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.1a\include\gdiplusbase.h
; Line 22
	push	ebp
	mov	ebp, esp
; Line 23
	mov	eax, DWORD PTR _in_pVoid$[ebp]
	push	eax
	call	_GdipFree@4
; Line 24
	pop	ebp
	ret	0
??3GdiplusBase@Gdiplus@@SAXPAX@Z ENDP			; Gdiplus::GdiplusBase::operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?swprintf@@YAHPA_WPB_WZZ
_TEXT	SEGMENT
__Ret$ = -8						; size = 4
__Arglist$ = -4						; size = 4
__String$ = 8						; size = 4
__Format$ = 12						; size = 4
?swprintf@@YAHPA_WPB_WZZ PROC				; swprintf, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\swprintf.inl
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 88
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __Arglist$[ebp], eax
; Line 89
	mov	ecx, DWORD PTR __Arglist$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __String$[ebp]
	push	eax
	call	__vswprintf
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ret$[ebp], eax
; Line 90
	mov	DWORD PTR __Arglist$[ebp], 0
; Line 91
	mov	eax, DWORD PTR __Ret$[ebp]
; Line 92
	mov	esp, ebp
	pop	ebp
	ret	0
?swprintf@@YAHPA_WPB_WZZ ENDP				; swprintf
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_gdiplusStartupInput$ = -84				; size = 16
_msg$ = -68						; size = 28
_hAccelTable$ = -40					; size = 4
$T1 = -36						; size = 4
_gdiplusToken$ = -32					; size = 4
_wbuf$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_wWinMain@16 PROC
; File c:\users\vitec\onedrive\cpp\tetrgdip\win32project3.cpp
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 200
	push	0
	push	0
	push	0
	lea	ecx, DWORD PTR _gdiplusStartupInput$[ebp]
	call	??0GdiplusStartupInput@Gdiplus@@QAE@P6GXW4DebugEventLevel@1@PAD@ZHH@Z ; Gdiplus::GdiplusStartupInput::GdiplusStartupInput
; Line 202
	push	0
	lea	eax, DWORD PTR _gdiplusStartupInput$[ebp]
	push	eax
	lea	ecx, DWORD PTR _gdiplusToken$[ebp]
	push	ecx
	call	_GdiplusStartup@12
; Line 205
	mov	edx, DWORD PTR _lpCmdLine$[ebp]
	push	edx
	push	OFFSET $SG77362
	call	_wcscmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@wWinMain
; Line 206
	mov	eax, DWORD PTR _gdiplusToken$[ebp]
	push	eax
	call	_GdiplusShutdown@4
; Line 207
	xor	eax, eax
	jmp	$LN7@wWinMain
$LN6@wWinMain:
; Line 212
	push	0
	push	OFFSET $SG77364
	call	?open_setup@@YAHPBDK@Z			; open_setup
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@wWinMain
; Line 213
	push	0
	push	OFFSET $SG77365
	call	?open_setup@@YAHPBDK@Z			; open_setup
	add	esp, 8
$LN5@wWinMain:
; Line 215
	call	?InitializeFonts@@YAXXZ			; InitializeFonts
; Line 217
	call	?setup_00@@YAXXZ			; setup_00
; Line 219
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z	; MyRegisterClass
	add	esp, 4
; Line 221
	mov	edx, DWORD PTR _nCmdShow$[ebp]
	push	edx
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	?InitInstance@@YAHPAUHINSTANCE__@@H@Z	; InitInstance
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@wWinMain
; Line 222
	xor	eax, eax
	jmp	$LN7@wWinMain
$LN4@wWinMain:
; Line 225
	push	109					; 0000006dH
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadAcceleratorsW@8
	mov	DWORD PTR _hAccelTable$[ebp], eax
$LN3@wWinMain:
; Line 227
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__GetMessageW@16
	test	eax, eax
	je	SHORT $LN2@wWinMain
; Line 228
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hAccelTable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__TranslateAcceleratorW@12
	test	eax, eax
	jne	SHORT $LN1@wWinMain
; Line 229
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
; Line 230
	lea	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	call	DWORD PTR __imp__DispatchMessageW@4
$LN1@wWinMain:
; Line 232
	jmp	SHORT $LN3@wWinMain
$LN2@wWinMain:
; Line 235
	mov	edx, DWORD PTR ?max_total_norm@@3HA	; max_total_norm
	push	edx
	push	OFFSET $SG77380
	push	12					; 0000000cH
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 236
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	push	OFFSET $SG77381
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 237
	mov	edx, DWORD PTR ?max_total_adv@@3HA	; max_total_adv
	push	edx
	push	OFFSET $SG77382
	push	12					; 0000000cH
	lea	eax, DWORD PTR _wbuf$[ebp]
	push	eax
	call	_swprintf_s
	add	esp, 16					; 00000010H
; Line 238
	lea	ecx, DWORD PTR _wbuf$[ebp]
	push	ecx
	push	OFFSET $SG77383
	call	?set_setup@@YAHPB_W0@Z			; set_setup
	add	esp, 8
; Line 239
	call	?save_setup@@YAHXZ			; save_setup
; Line 240
	call	?close_setup@@YAHXZ			; close_setup
; Line 242
	mov	edx, DWORD PTR _gdiplusToken$[ebp]
	push	edx
	call	_GdiplusShutdown@4
; Line 243
	push	34952					; 00008888H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__KillTimer@8
; Line 244
	push	34951					; 00008887H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__KillTimer@8
; Line 245
	push	34950					; 00008886H
	mov	edx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	edx
	call	DWORD PTR __imp__KillTimer@8
; Line 246
	push	34949					; 00008885H
	mov	eax, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	eax
	call	DWORD PTR __imp__KillTimer@8
; Line 247
	push	34948					; 00008884H
	mov	ecx, DWORD PTR ?hhhwww@@3PAUHWND__@@A	; hhhwww
	push	ecx
	call	DWORD PTR __imp__KillTimer@8
; Line 249
	mov	edx, DWORD PTR ?g_availableMonospaceFont@@3PA_WA ; g_availableMonospaceFont
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 251
	mov	eax, DWORD PTR _msg$[ebp+8]
$LN7@wWinMain:
; Line 252
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_wWinMain@16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END
